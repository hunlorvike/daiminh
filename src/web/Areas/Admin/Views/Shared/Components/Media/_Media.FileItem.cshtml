@using shared.Enums
@model MediaFileViewModel
@{
    bool isInModal = ViewData.TryGetValue("IsInModal", out var value) && value is bool boolValue && boolValue;
    var cardClasses = isInModal ? "card-selectable" : "";
    var imageWrapperClasses = isInModal ? "cursor-pointer" : "";
}

<div class="col">
    <div class="card card-sm h-100 media-file-item @cardClasses" data-file-id="@Model.Id"
        data-file-url="@Model.PresignedUrl" data-file-alt="@Model.AltText" data-file-name="@Model.OriginalFileName"
        data-file-type="@Model.MediaType.ToString().ToLower()" data-bs-toggle="tooltip" data-bs-placement="top">

        <div class="card-img-top img-responsive img-responsive-1x1 d-flex align-items-center justify-content-center @(Model.MediaType != MediaType.Image ? "bg-gray-200" : "") @imageWrapperClasses"
            style="@(Model.MediaType == MediaType.Image && !string.IsNullOrEmpty(Model.PresignedUrl) ? $"background-image: url('{Model.PresignedUrl}'); background-size: cover; background-position: center;" : "")"
            title="@Model.OriginalFileName (@Model.FormattedFileSize)">
            @if (Model.MediaType != MediaType.Image)
            {
                var iconClass = Model.MediaType switch
                {
                    MediaType.Video => "ti-video",
                    MediaType.Document => "ti-file-text",
                    _ => "ti-file"
                };
                <i class="ti @iconClass fs-1 text-muted"></i>
            }
        </div>

        <div class="card-body p-2 text-center">
            <div class="text-truncate small fw-medium mb-1">@Model.OriginalFileName</div>
            <div class="text-muted small">@Model.FormattedFileSize</div>
            @if (Model.MediaType == MediaType.Video && Model.Duration.HasValue)
            {
                <div class="text-muted small">@TimeSpan.FromSeconds(Model.Duration.Value).ToString(@"mm\:ss")</div>
            }
        </div>

        @if (!isInModal)
        {
            <div class="card-footer p-2">
                <div class="btn-list justify-content-center flex-nowrap">
                    <a asp-action="Edit" asp-controller="Media" asp-route-id="@Model.Id"
                        class="btn btn-sm btn-ghost-secondary" title="Sửa thông tin">
                        <i class="ti ti-pencil"></i>
                    </a>
                    <button class="btn btn-sm btn-ghost-danger delete-item-btn" 
                        data-id="@Model.Id"
                        data-name="@Model.OriginalFileName" title="Xóa"
                        data-delete-url="@Url.Action("DeleteFile", "Media", new { area = "Admin" })">
                        <i class="ti ti-trash"></i>
                    </button>
                </div>
            </div>
        }
    </div>
</div>