@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@functions {
    // Define a class for navigation items to make the structure cleaner
    public class NavItem
    {
        public string Title { get; set; }
        public string Icon { get; set; }
        public string Controller { get; set; }
        public string Action { get; set; }
        public string Area { get; set; }
        public string Policy { get; set; }
        public List<NavItem> SubItems { get; set; } = new List<NavItem>();
    }

    bool IsMenuActive(string area, params string[] controllers)
    {
        var currentController = ViewContext.RouteData.Values["controller"]?.ToString() ?? "";
        var currentArea = ViewContext.RouteData.Values["area"]?.ToString() ?? "";

        if (area != currentArea) return false;
        return controllers.Contains(currentController, StringComparer.OrdinalIgnoreCase);
    }
}

@{
    var navItems = new List<NavItem>
    {
        new NavItem { Title = "Trang chủ", Icon = "ti-home", Controller = "Dashboard", Action = "Index", Area = "Admin" },
        new NavItem { Title = "Quản lý vai trò", Icon = "ti-user-shield", Controller = "Role", Action = "Index", Area = "Admin" },
        new NavItem { Title = "Quản lý người dùng", Icon = "ti-users", Controller = "User", Action = "Index", Area = "Admin" },
        new NavItem { Title = "Xem trang web", Icon = "ti-external-link", Controller = "Home", Action = "Index", Area = "Client" }
    };
}

<aside class="navbar navbar-vertical navbar-expand-lg navbar-light border-end">
    <div class="container-fluid">
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#sidebar-menu"
                aria-controls="sidebar-menu" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <h1 class="navbar-brand navbar-brand-autodark">
            <a asp-area="Admin" asp-controller="Dashboard" asp-action="Index" class="text-decoration-none fw-bold">
                DAIMINH
            </a>
        </h1>
        <div class="navbar-nav flex-row d-lg-none">
            @* User menu can be added here for mobile view if needed *@
        </div>
        <div class="collapse navbar-collapse" id="sidebar-menu">
            <ul class="navbar-nav pt-lg-3">
                @foreach (var item in navItems)
                {
                    var hasSubItems = item.SubItems.Any();
                    var isMenuOpen = IsMenuActive(item.Area, item.Controller) || item.SubItems.Any(sub => IsMenuActive(sub.Area, sub.Controller));

                    <li class="nav-item @(hasSubItems ? "dropdown" : "") @(isMenuOpen ? "active" : "")">
                        <a class="nav-link @(hasSubItems ? "dropdown-toggle" : "")"
                           href="@(hasSubItems ? "#" + item.Controller + "-menu" : Url.Action(item.Action, item.Controller, new { Area = item.Area }))"
                           @(hasSubItems ? "data-bs-toggle=collapse" : "")
                           aria-expanded="@(isMenuOpen ? "true" : "false")">
                            <span class="nav-link-icon d-md-none d-lg-inline-block">
                                <i class="ti @item.Icon"></i>
                            </span>
                            <span class="nav-link-title">
                                @item.Title
                            </span>
                        </a>
                        @if (hasSubItems)
                        {
                            <div class="collapse @(isMenuOpen ? "show" : "")" id="@(item.Controller)-menu">
                                <ul class="nav nav-pills flex-column">
                                    @foreach (var subItem in item.SubItems)
                                    {
                                        var isSubItemActive = IsMenuActive(subItem.Area, subItem.Controller);
                                        <li class="nav-item @(isSubItemActive ? "active" : "")">
                                            <a class="nav-link" href="@Url.Action(subItem.Action, subItem.Controller, new { Area = subItem.Area })">
                                                @subItem.Title
                                            </a>
                                        </li>
                                    }
                                </ul>
                            </div>
                        }
                    </li>
                }
            </ul>
        </div>
    </div>
</aside>
