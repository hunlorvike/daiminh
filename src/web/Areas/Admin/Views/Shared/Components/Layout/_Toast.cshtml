@using shared.Models
@model ToastData

@{
    var title = Model?.Title ?? "Thông báo";
    var message = Model?.Message ?? "No message provided.";
    var type = Model?.Type ?? ToastType.Info;

    var cardClass = type switch
    {
        ToastType.Success => "bg-green",
        ToastType.Error => "bg-red",
        ToastType.Warning => "bg-yellow",
        ToastType.Info => "bg-blue",
        _ => "bg-secondary"
    };

    var iconClass = type switch
    {
        ToastType.Success => "ti ti-check",
        ToastType.Error => "ti ti-alert-circle",
        ToastType.Warning => "ti ti-alert-triangle",
        ToastType.Info => "ti ti-info-circle",
        _ => "ti ti-bell"
    };
}

<div class="toast-container position-fixed top-0 end-0 p-3">
    <div class="toast border-0" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="card mb-0">
            <div class="card-status-top @cardClass">
            </div>
            <div class="card-header">
                <div class="card-title">
                    <div class="d-flex align-items-center">
                        <span class="avatar avatar-sm me-2 avatar-rounded">
                            <i class="@iconClass"></i>
                        </span>
                        <span>@title</span>
                    </div>
                </div>
                <div class="card-actions">
                    <a href="#" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></a>
                </div>
            </div>
            <div class="card-body pt-2">
                @message
            </div>
        </div>
    </div>
</div>

