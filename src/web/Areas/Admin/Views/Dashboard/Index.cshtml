@{
    ViewData["Title"] = "Dashboard Tổng Quan - Hệ thống quản trị";
    ViewData["PageTitle"] = "Dashboard Tổng Quan";
    ViewData["Breadcrumbs"] = new List<(string Text, string Url)>
    {
        ("Dashboard", "")
    };
}

@section PageActions {
    <div class="form-group">
        <input type="text" class="form-control" id="dashboardDateRangePicker" placeholder="Chọn khoảng thời gian..." />
    </div>
}
<div class="row row-deck row-cards mb-3">
    <div class="col-sm-6 col-lg-3">
        <div class="card card-sm">
            <div class="card-body">
                <div class="row align-items-center">
                    <div class="col-auto">
                        <span class="bg-primary text-white avatar"><i class="ti ti-file-text"></i></span>
                    </div>
                    <div class="col">
                        <div class="font-weight-medium">Bài Viết Mới (7 ngày)</div>
                        <div class="text-muted" id="kpiNewArticlesCount">--</div>
                    </div>
                    <div class="col-auto">
                        <span class="text-success d-inline-flex align-items-center lh-1" id="kpiNewArticlesTrend"></span>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-6 col-lg-3">
        <div class="card card-sm">
            <div class="card-body">
                <div class="row align-items-center">
                    <div class="col-auto">
                        <span class="bg-azure text-white avatar"><i class="ti ti-package"></i></span>
                    </div>
                    <div class="col">
                        <div class="font-weight-medium">Sản Phẩm Mới (7 ngày)</div>
                        <div class="text-muted" id="kpiNewProductsCount">--</div>
                    </div>
                    <div class="col-auto">
                        <span class="text-danger d-inline-flex align-items-center lh-1" id="kpiNewProductsTrend"></span>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-6 col-lg-3">
        <div class="card card-sm">
            <div class="card-body">
                <div class="row align-items-center">
                    <div class="col-auto">
                        <span class="bg-green text-white avatar">
                            <i class="ti ti-mail-opened"></i>
                        </span>
                    </div>
                    <div class="col">
                        <div class="font-weight-medium">
                            Liên Hệ Mới (Hôm nay)
                        </div>
                        <div class="text-muted" id="kpiNewContactsCount">
                            --
                        </div>
                    </div>
                    <div class="col-auto">
                        <span class="text-success d-inline-flex align-items-center lh-1" id="kpiNewContactsTrend">
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-6 col-lg-3">
        <div class="card card-sm">
            <div class="card-body">
                <div class="row align-items-center">
                    <div class="col-auto">
                        <span class="bg-yellow text-white avatar">
                            <i class="ti ti-users"></i>
                        </span>
                    </div>
                    <div class="col">
                        <div class="font-weight-medium">
                            Người Dùng Mới (7 ngày)
                        </div>
                        <div class="text-muted" id="kpiNewUsersCount">
                            --
                        </div>
                    </div>
                    <div class="col-auto">
                        <span class="text-success d-inline-flex align-items-center lh-1" id="kpiNewUsersTrend">
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row row-deck row-cards mb-3">
    <div class="col-lg-7">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title"><i class="ti ti-chart-line me-2 text-primary"></i>Hoạt Động Tổng Quan</h3>
            </div>
            <div class="card-body">
                <div id="chart-main-overview" style="height: 300px;"></div>
            </div>
        </div>
    </div>
    <div class="col-lg-5">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title"><i class="ti ti-chart-pie me-2 text-azure"></i>Phân Bổ Nội Dung Chính</h3>
            </div>
            <div class="card-body">
                <div id="chart-content-distribution" style="height: 300px;"></div>
            </div>
        </div>
    </div>
</div>

<div class="row row-deck row-cards">
    <div class="col-md-6 col-lg-4">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title"><i class="ti ti-article me-2 text-indigo"></i>Bài Viết Mới Nhất</h3>
                <div class="card-actions">
                    <a asp-area="Admin" asp-controller="Article" asp-action="Index" class="btn btn-sm btn-outline-primary">Xem tất cả</a>
                </div>
            </div>
            <div class="list-group list-group-flush list-group-hoverable" style="max-height: 350px; overflow-y: auto;">
                <div id="latest-articles-list">
                    <div class="list-group-item p-3 text-center text-muted">Đang tải...</div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-6 col-lg-4">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title"><i class="ti ti-package me-2 text-purple"></i>Sản Phẩm Xem Nhiều</h3>
                <div class="card-actions">
                    <a asp-area="Admin" asp-controller="Product" asp-action="Index" class="btn btn-sm btn-outline-primary">Xem tất cả</a>
                </div>
            </div>
            <div class="list-group list-group-flush list-group-hoverable" style="max-height: 350px; overflow-y: auto;">
                <div id="top-products-list">
                    <div class="list-group-item p-3 text-center text-muted">Đang tải...</div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-4">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">
                    <i class="ti ti-message-circle-2-filled me-2 text-yellow"></i>Liên Hệ Cần Xử Lý
                </h3>
                <div class="card-actions">
                    <a asp-area="Admin" asp-controller="Contact" asp-action="Index" class="btn btn-sm btn-outline-primary">Xem tất cả</a>
                </div>
            </div>
            <div class="list-group list-group-flush list-group-hoverable" style="max-height: 350px; overflow-y: auto;">
                <div id="pending-contacts-list">
                    <div class="list-group-item p-3 text-center text-muted">Đang tải...</div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            let currentStartDate = null;
            let currentEndDate = null;

            const picker = new Litepicker({
                element: $("#dashboardDateRangePicker")[0],
                singleMode: false,
                allowRepick: true,
                autoApply: true,
                format: "DD/MM/YYYY",
                separator: " - ",
                buttonText: {
                    previousMonth: `<i class="ti ti-chevron-left"></i>`,
                    nextMonth: `<i class="ti ti-chevron-right"></i>`,
                    apply: "Áp dụng",
                    cancel: "Hủy",
                    reset: "Đặt lại",
                },
            });

            picker.on("selected",(date1, date2)=>{
                currentStartDate = date1 ? date1.toJSDate() : null;
                currentEndDate = date2 ? date2.toJSDate() : null;
                fetchDashboardData(currentStartDate, currentEndDate);
            })

            fetchDashboardData(null, null);
        });

        // Fetch dashboard data from server
        async function fetchDashboardData(startDate, endDate) {
            showLoadingIndicators();
            try {
                const params = (startDate && endDate)
                    ? {
                        startDate: startDate.toISOString(),
                        endDate: endDate.toISOString()
                    }
                    : {};
                const response = await $.ajax({
                    url: `/Admin/Dashboard/GetDashboardData?${$.param(params)}`,
                    method: "GET"
                });
                updateDashboard(response);
            } catch (error) {
                console.error("Error fetching dashboard data:", error);
                alert("Không thể tải dữ liệu dashboard. Vui lòng thử lại.");
            } finally {
                hideLoadingIndicators();
            }
        }

        // Show loading indicators
        function showLoadingIndicators() {
            $(".card-body, .list-group").css("opacity", "0.5");
            $("#kpiNewArticlesCount, #kpiNewProductsCount, #kpiNewContactsCount, #kpiNewUsersCount").text("--");
            $("#kpiNewArticlesTrend, #kpiNewProductsTrend, #kpiNewContactsTrend, #kpiNewUsersTrend").empty();
            $("#latest-articles-list, #top-products-list, #pending-contacts-list")
                .html(`<div class="list-group-item p-3 text-center text-muted">Đang tải...</div>`);
            $("#chart-main-overview, #chart-content-distribution")
                .html(`<div class="text-center p-5"><div class="spinner-border text-primary"></div></div>`);
        }

        // Hide loading indicators
        function hideLoadingIndicators() {
            $(".card-body, .list-group").css("opacity", "1");
        }

        // Update dashboard data
        function updateDashboard(data) {
            updateKpi("#kpiNewArticles", data.newArticlesKpi);
            updateKpi("#kpiNewProducts", data.newProductsKpi);
            updateKpi("#kpiNewContacts", data.pendingContactsKpi);
            updateKpi("#kpiNewUsers", data.newUsersKpi);

            if (window.mainOverviewChart?.updateOptions) {
                window.mainOverviewChart.updateOptions({
                    series: data.mainOverviewChart.series,
                    xaxis: { categories: data.mainOverviewChart.categories }
                });
            }

            if (window.contentDistributionChart?.updateOptions) {
                window.contentDistributionChart.updateOptions({
                    series: data.contentDistributionChart.series,
                    labels: data.contentDistributionChart.labels
                });
            }

            updateList("#latest-articles-list", data.latestArticles, item => `
                <a href="${item.url}" class="list-group-item list-group-item-action">
                    <div class="d-flex w-100 justify-content-between">
                        <h5 class="mb-1 text-truncate" style="max-width: 70%;" title="${item.title}">${item.title}</h5>
                        <small class="text-muted">${item.dateInfo}</small>
                    </div>
                    <small class="text-muted">${item.subtitle || ""}</small>
                </a>
            `);

            updateList("#top-products-list", data.topViewedProducts, item => `
                <a href="${item.url}" class="list-group-item list-group-item-action">
                    <div class="d-flex w-100 justify-content-between">
                        <h5 class="mb-1 text-truncate" style="max-width: 70%;" title="${item.title}">${item.title}</h5>
                        <small class="text-info">${item.value} ${item.valueLabel || ""}</small>
                    </div>
                    <small class="text-muted">${item.subtitle || ""}</small>
                </a>
            `);

            updateList("#pending-contacts-list", data.pendingContacts, item => `
                <a href="${item.url}" class="list-group-item list-group-item-action">
                    <div class="d-flex w-100 justify-content-between">
                        <h5 class="mb-1 text-truncate" style="max-width: 60%;" title="${item.title}">${item.title}</h5>
                        <small class="text-muted">${item.dateInfo}</small>
                    </div>
                    <p class="mb-1 text-muted text-truncate" style="max-width: 90%;" title="${item.subtitle}">${item.subtitle || ""}</p>
                </a>
            `);
        }

        // Update KPI
        function updateKpi(selectorPrefix, kpiData) {
            $(`${selectorPrefix}Count`).text(kpiData.count);
            updateTrend(`${selectorPrefix}Trend`, kpiData.trendPercentage, kpiData.trendStatus);
        }

        // Update KPI trend
        function updateTrend(selector, trendValue, status) {
            const iconClass = status === "down"
                ? "ti-trending-down"
                : (status === "neutral" || trendValue === 0)
                    ? "ti-minus"
                    : "ti-trending-up";
            const textColor = status === "down"
                ? "text-danger"
                : (status === "neutral" || trendValue === 0)
                    ? "text-muted"
                    : "text-success";
            $(selector).html(`<i class="ti ${iconClass} me-1"></i> ${Math.abs(trendValue)}%`)
                .attr("class", `d-inline-flex align-items-center lh-1 ${textColor}`);
        }

        // Update list
        function updateList(selector, items, templateFn) {
            $(selector).html(items?.length > 0
                ? items.map(templateFn).join("")
                : `<div class="list-group-item p-3 text-center text-muted">Không có dữ liệu.</div>`);
        }

        // Chart options
        const defaultChartOptions = {
            chart: { toolbar: { show: false }, animations: { enabled: true, speed: 600 }, zoom: { enabled: false } },
            dataLabels: { enabled: false },
            stroke: { curve: "smooth", width: 2 },
            grid: { borderColor: "var(--tblr-border-color, #e9ecef)", strokeDashArray: 4, padding: { top: -20, right: 0, bottom: -10, left: 10 } },
            legend: { show: true, position: "top", horizontalAlign: "right" }
        };

        // Main overview chart
        window.mainOverviewChart = new ApexCharts($("#chart-main-overview")[0], {
            ...defaultChartOptions,
            series: [],
            xaxis: { categories: [], labels: { style: { colors: "var(--tblr-secondary)" } }, axisBorder: { show: false }, axisTicks: { show: false } },
            yaxis: { labels: { style: { colors: "var(--tblr-secondary)" }, formatter: val => val.toFixed(0) } },
            colors: [tabler.tabler.getColor("primary"), tabler.tabler.getColor("azure"), tabler.tabler.getColor("green")],
            tooltip: { theme: $("body").data("bs-theme") === "dark" ? "dark" : "light" }
        });
        window.mainOverviewChart.render();

        // Content distribution chart
        window.contentDistributionChart = new ApexCharts($("#chart-content-distribution")[0], {
            chart: { type: "donut", height: 300, sparkline: { enabled: false } },
            series: [],
            labels: [],
            colors: [tabler.tabler.getColor("blue"), tabler.tabler.getColor("indigo"), tabler.tabler.getColor("purple"), tabler.tabler.getColor("pink")],
            legend: { position: "bottom", offsetY: 5 },
            plotOptions: {
                pie: {
                    donut: {
                        labels: {
                            show: true,
                            total: {
                                show: true,
                                label: "Tổng",
                                formatter: w => w.globals.seriesTotals.reduce((a, b) => a + b, 0) + "%"
                            }
                        }
                    }
                }
            },
            dataLabels: {
                enabled: true,
                formatter: (val, opts) => `${opts.w.globals.labels[opts.seriesIndex]}: ${val.toFixed(1)}%`
            },
            tooltip: {
                theme: $("body").data("bs-theme") === "dark" ? "dark" : "light",
                y: { formatter: val => `${val}%` }
            }
        });
        window.contentDistributionChart.render();
    </script>
}
