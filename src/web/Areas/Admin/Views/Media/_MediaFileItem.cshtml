@using shared.Enums
@using web.Areas.Admin.ViewModels.Media
@model MediaFileViewModel
@{
	bool isInModal = ViewData.ContainsKey("IsInModal") && (bool)ViewData["IsInModal"];
}

<div class="media-file-item cursor-pointer"
	 data-file-id="@Model.Id"
	 data-file-url="@Model.PublicUrl"
	 data-file-alt="@Model.AltText"
	 data-file-name="@Model.OriginalFileName"
	 data-file-type="@Model.MediaType.ToString().ToLower()"
	 data-bs-toggle="tooltip" data-bs-placement="bottom" title="@Model.OriginalFileName (@Model.FormattedFileSize)">

	<div class="card card-sm">
		<div class="card-img-top img-responsive img-responsive-1by1
              @(Model.MediaType != MediaType.Image ? "text-muted bg-light d-flex align-items-center justify-content-center fs-1" : "")"
			 style="@(Model.MediaType == MediaType.Image ? $"background-image: url('{Model.PublicUrl}');" : "")">
			@if (Model.MediaType != MediaType.Image)
			{
				<i class="ti
            @(Model.MediaType == MediaType.Video ? "ti-video" : "")
            @(Model.MediaType == MediaType.Document ? "ti-file-text" : "")
            @(Model.MediaType == MediaType.Other ? "ti-file" : "")
			   "></i>
			}
		</div>

		<div class="card-body p-2 text-center">
			<div class="text-truncate small mb-1">@Model.OriginalFileName</div>
			<div class="text-muted small">@Model.FormattedFileSize</div>
			@if (Model.MediaType == MediaType.Video && Model.Duration.HasValue)
			{
				<div class="text-muted small">@Model.Duration.Value min</div>
			}
		</div>
		@if (!isInModal)
		{
			<div class="card-footer text-center p-1">
				<div class="btn-list flex-nowrap justify-content-center">
					<button class="btn btn-sm btn-outline-danger delete-file-btn" data-id="@Model.Id" data-name="@Model.OriginalFileName" title="XÃ³a" data-delete-url="@Url.Action("DeleteFile", "Media")"><i class="ti ti-trash"></i></button>
				</div>
			</div>
		}
	</div>

</div>