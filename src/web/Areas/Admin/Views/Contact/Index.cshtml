@model ContactIndexViewModel
@{
	ViewData["Title"] = "Quản lý Liên hệ";
	ViewData["PageTitle"] = "Danh sách Liên hệ";
	ViewData[TempDataConstants.Breadcrumbs] = new List<(string Text, string Url)> {
		("Liên hệ", "")
	};
}

<div class="card mb-3">
	<div class="card-header">
		<h3 class="card-title">
			<i class="ti ti-filter me-2"></i>Bộ lọc
		</h3>
	</div>
	<div class="card-body">
		<form method="get" asp-action="Index" id="filterForm">
			<div class="row g-3 align-items-end">
				<div class="col-md-5 col-sm-12">
					<div class="form-group">
						<label asp-for="Filter.SearchTerm" class="form-label"></label>
						<div class="input-group">
							<span class="input-group-text">
								<i class="ti ti-search"></i>
							</span>
							<input asp-for="Filter.SearchTerm" class="form-control"
								   placeholder="Tìm tên, email, chủ đề, nội dung...">
							<button class="btn btn-icon" type="button" id="clearSearch" title="Xóa tìm kiếm">
								<i class="ti ti-x"></i>
							</button>
						</div>
					</div>
				</div>
				<div class="col-md-3 col-sm-6">
					<div class="form-group">
						<label asp-for="Filter.Status" class="form-label"></label>
						<div class="input-group">
							<span class="input-group-text">
								<i class="ti ti-filter-check"></i>
							</span>
							@{
								var filterStatusOptions = new List<SelectListItem> { new SelectListItem { Value = "", Text =
							"Tất cả trạng thái" } };
								filterStatusOptions.AddRange(Model.Filter.StatusOptions ?? new List<SelectListItem>());
							}
							<select asp-for="Filter.Status" asp-items="filterStatusOptions"
									class="form-select tom-selected"></select>
						</div>
					</div>
				</div>
				<div class="col-md-2 col-6">
					<button type="submit" class="btn btn-primary w-100">
						<i class="ti ti-filter me-1 d-none d-sm-inline-block"></i> Lọc
					</button>
				</div>
				<div class="col-md-2 col-6">
					<a asp-action="Index" class="btn btn-outline-secondary w-100">
						<i class="ti ti-reload me-1 d-none d-sm-inline-block"></i> Đặt lại
					</a>
				</div>
			</div>
		</form>
	</div>
</div>

<div class="card">
	<div class="card-header d-flex justify-content-between align-items-center">
		<h3 class="card-title">
			<i class="ti ti-mail me-2"></i>Danh sách Liên hệ
		</h3>
		@if (Model.Contacts.TotalItemCount > 0)
		{
			<small class="text-muted d-none d-md-block">
				Hiển thị
				@Model.Contacts.FirstItemOnPage-@Model.Contacts.LastItemOnPage trên tổng số @Model.Contacts.TotalItemCount
				liên hệ
			</small>
		}
	</div>
	<div class="card-body p-0">
		@if (!Model.Contacts.Any())
		{
			<div class="empty py-5">
				<div class="empty-icon">
					<div class="avatar avatar-xl bg-light-subtle rounded">
						<i class="ti ti-mail-off fs-1 text-muted"></i>
					</div>
				</div>
				<p class="empty-title mt-3">Không có liên hệ nào</p>
				<p class="empty-subtitle text-muted">
					Chưa có ai gửi liên hệ hoặc không có kết quả nào khớp với bộ lọc của bạn.
				</p>
				@if (!(string.IsNullOrWhiteSpace(Model.Filter.SearchTerm) && !Model.Filter.Status.HasValue))
				{
					<div class="empty-action">
						<a asp-action="Index" class="btn btn-outline-secondary">
							<i class="ti ti-reload me-2"></i> Đặt lại bộ lọc
						</a>
					</div>
				}
			</div>
		}
		else
		{
			<div class="table-responsive">
				<table class="table table-vcenter card-table table-striped table-hover">
					<thead>
						<tr>
							<th>Người gửi</th>
							<th class="d-none d-md-table-cell">Email</th>
							<th>Chủ đề</th>
							<th class="text-center" style="width: 12%">Trạng thái</th>
							<th class="d-none d-lg-table-cell" style="width: 15%">Ngày gửi</th>
							<th class="w-1"></th>
						</tr>
					</thead>
					<tbody>
						@foreach (var item in Model.Contacts)
						{
							<tr class="@(item.Status == ContactStatus.New ? "fw-bold" : "")">
								<td>
									<div class="d-flex align-items-center">
										<span class="avatar avatar-xs bg-blue-lt me-2">
											@(item.FullName.Length > 0 ? item.FullName[0].ToString().ToUpper() : "?")
										</span>
										<span>@item.FullName</span>
									</div>
								</td>
								<td class="text-muted d-none d-md-table-cell">
									<div class="d-flex align-items-center">
										<i class="ti ti-mail me-1"></i>
										<a href="mailto:@item.Email" class="text-reset">@item.Email</a>
									</div>
								</td>
								<td>
									<a asp-action="Details" asp-route-id="@item.Id" class="text-reset d-block text-truncate"
									   style="max-width: 250px;" title="@item.Subject">
										@if (item.Status == ContactStatus.New)
										{
											<span class="badge bg-primary-lt me-1">Mới</span>
										}
										@item.Subject
									</a>
								</td>
								<td class="text-center">
									@{
										var statusClass = item.Status switch
										{
											ContactStatus.New => "primary",
											ContactStatus.Read => "info",
											ContactStatus.Replied => "purple",
											ContactStatus.InProgress => "warning",
											ContactStatus.Resolved => "success",
											ContactStatus.Spam => "danger",
											ContactStatus.Archived => "secondary",
											_ => "secondary"
										};

										var statusIcon = item.Status switch
										{
											ContactStatus.New => "mail",
											ContactStatus.Read => "eye",
											ContactStatus.Replied => "mail-forward",
											ContactStatus.InProgress => "loader",
											ContactStatus.Resolved => "check",
											ContactStatus.Spam => "alert-triangle",
											ContactStatus.Archived => "archive",
											_ => "help"
										};
									}
									<span class="status status-@statusClass">
										<span class="status-dot @(item.Status == ContactStatus.New || item.Status == ContactStatus.InProgress ? "status-dot-animated" : "")"></span>
										<span class="d-none d-md-inline">@item.Status.GetDisplayName()</span>
									</span>
								</td>
								<td class="text-muted d-none d-lg-table-cell"
									title="@Html.ToLocalTime(item.CreatedAt, "Asia/Ho_Chi_Minh", "dd/MM/yyyy HH:mm:ss")">
									<div class="d-flex align-items-center">
										<i class="ti ti-calendar-time me-1"></i>
										@Html.ToLocalTime(item.CreatedAt, "Asia/Ho_Chi_Minh")
									</div>
								</td>
								<td>
									<div class="btn-group">
										<a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary"
										   title="Xem chi tiết">
											<i class="ti ti-eye"></i>
										</a>
										<button class="btn btn-sm btn-outline-danger delete-item-btn" title="Xóa"
												data-id="@item.Id" data-name="@($"liên hệ từ {item.FullName} về '{item.Subject}'")"
												data-delete-url="@Url.Action("Delete", "Contact")">
											<i class="ti ti-trash"></i>
										</button>
									</div>
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		}
	</div>
	@* Pagination *@
	@if (Model.Contacts.PageCount > 1)
	{
		<div class="card-footer">
			<div class="d-flex align-items-center justify-content-center">
				@Html.PagedListPager(
								Model.Contacts,
								page => Url.Action("Index", new
								{
									page,
									searchTerm = Model.Filter.SearchTerm,
									status = Model.Filter.Status,
									pageSize = Model.Contacts.PageSize
								}),
								new PagedListRenderOptions
			{
				UlElementClasses = new[] { "pagination mb-0" },
				LiElementClasses = new[] { "page-item" },
				PageClasses = new[] { "page-link" },
				DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
				DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
				DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
				DisplayLinkToNextPage = PagedListDisplayMode.Always,
				ActiveLiElementClass = "active",
				LinkToPreviousPageFormat = "<span aria-hidden=\"true\">«</span>",
				LinkToNextPageFormat = "<span aria-hidden=\"true\">»</span>",
			})
			</div>
		</div>
	}
</div>

@section Scripts {
	<script>
		$(document).ready(function () {
			$('#clearSearch').on('click', function () {
				$('#Filter_SearchTerm').val('');
				$('#filterForm').submit();
			});
		});
	</script>
}