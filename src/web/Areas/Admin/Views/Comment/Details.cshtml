@using web.Areas.Admin.ViewModels.Comment
@model CommentViewModel
@{
	ViewData["Title"] = "Chi tiết bình luận - Hệ thống quản trị";
	ViewData["Breadcrumbs"] = new List<(string Text, string Url)>
	{
		("Quản lý bình luận", "/Admin/Comment"),
		("Chi tiết", "")
	};
}

<div class="row">
	<div class="col-lg-8">
		<div class="card">
			<div class="card-header">
				<h3 class="card-title">Chi tiết bình luận</h3>
				<div class="ms-auto">
					<span class="badge @(Model.IsApproved ? "bg-success" : "bg-warning") me-2">
						@(Model.IsApproved ? "Đã duyệt" : "Chờ duyệt")
					</span>
					<span class="text-muted small">
						<i class="ti ti-clock me-1"></i> @Model.CreatedAt.ToString("dd/MM/yyyy HH:mm")
					</span>
				</div>
			</div>
			<div class="card-body">
				<div class="mb-3">
					<div class="d-flex align-items-center mb-3 border-bottom pb-3">
						@if (!string.IsNullOrEmpty(Model.AuthorAvatar))
						{
							<span class="avatar avatar-md me-3 rounded" style="background-image: url(@Model.AuthorAvatar)"></span>
						}
						else
						{
							<span class="avatar avatar-md me-3 rounded bg-blue-lt">@Model.AuthorName.Substring(0, 1).ToUpper()</span>
						}
						<div>
							<h4 class="mb-0">@Model.AuthorName</h4>
							@if (!string.IsNullOrEmpty(Model.AuthorEmail))
							{
								<div class="text-muted small">@Model.AuthorEmail</div>
							}
							@if (!string.IsNullOrEmpty(Model.AuthorWebsite))
							{
								<div class="text-muted small">
									<i class="ti ti-world me-1"></i><a href="@Model.AuthorWebsite" target="_blank" rel="nofollow ugc">@Model.AuthorWebsite</a>
								</div>
							}
						</div>
					</div>

					@if (Model.ParentId.HasValue)
					{
						<div class="alert alert-info alert-important mb-3" role="alert">
							<div class="d-flex">
								<div>
									<i class="alert-icon ti ti-arrow-back-up-double me-2"></i>
								</div>
								<div>
									<h4 class="alert-title mb-1">Phản hồi cho bình luận của @Model.ParentAuthorName</h4>
									<div class="text-muted">
										<a href="@Url.Action("Details", new { id = Model.ParentId })">Xem bình luận gốc</a>
									</div>
								</div>
							</div>
						</div>
					}

					<div class="card card-body bg-light p-3">
						<div class="markdown">
							@* Assuming Model.Content is safe or sanitized server-side *@
							@Html.Raw(Model.Content)
						</div>
					</div>

				</div>

				<div class="d-flex justify-content-between mt-4 border-top pt-3">
					<a asp-action="Index" class="btn btn-outline-secondary">
						<i class="ti ti-arrow-left me-2"></i> Quay lại
					</a>
					<div>
						<a asp-action="Reply" asp-route-id="@Model.Id" class="btn btn-primary">
							<i class="ti ti-arrow-back-up me-2"></i> Trả lời
						</a>
						<a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">
							<i class="ti ti-pencil me-2"></i> Chỉnh sửa
						</a>
					</div>
				</div>
			</div>
		</div>
	</div>

	<div class="col-lg-4">
		<div class="card">
			<div class="card-header">
				<h3 class="card-title">Thông tin bài viết</h3>
			</div>
			<div class="card-body">
				<div class="mb-3">
					<label class="form-label">Bài viết</label>
					<div>
						<a href="/Admin/Article/Edit/@Model.ArticleId" class="text-reset" title="Chỉnh sửa bài viết">
							<strong>@Model.ArticleTitle</strong>
						</a>
					</div>
				</div>
				@* TODO: Add link to view article on frontend *@
				@* <div class="mb-3"> *@
				@*     <a href="#" class="btn btn-outline-primary w-100"> *@
				@*         <i class="ti ti-external-link me-2"></i> Xem bài viết *@
				@*     </a> *@
				@* </div> *@
			</div>
		</div>
		@* Optional: Card to show replies if this is a parent comment *@
		@* @if (Model.Replies != null && Model.Replies.Any()) *@
		@* { *@
		@*     <div class="card mt-3"> *@
		@*         <div class="card-header"> *@
		@*             <h3 class="card-title">Các phản hồi (@Model.Replies.Count)</h3> *@
		@*         </div> *@
		@*         <div class="list-group list-group-flush overflow-auto" style="max-height: 300px;"> *@
		@*             @foreach (var reply in Model.Replies) *@
		@*             { *@
		@*                 <a href="@Url.Action("Details", new { id = reply.Id })" class="list-group-item list-group-item-action"> *@
		@*                     <div class="d-flex w-100 justify-content-between"> *@
		@*                         <h5 class="mb-1">@reply.AuthorName</h5> *@
		@*                         <small class="text-muted">@reply.CreatedAt.ToString("dd/MM/yy HH:mm")</small> *@
		@*                     </div> *@
		@*                     <p class="mb-1 text-truncate">@reply.Content</p> *@
		@*                 </a> *@
		@*             } *@
		@*         </div> *@
		@*     </div> *@
		@* } *@
	</div>
</div>

@section Scripts {
	<script>
		$(document).ready(function () {
			 // Delete item setup (needed if delete button added here)
			$('.delete-item').on('click', function () {
				var id = $(this).data('id');
				var name = $(this).data('name');
				var deleteUrl = $(this).data('delete-url');

				$('#delete-item-id').val(id);
				$('#delete-item-name').val(name); // Might want to display content snippet instead
				$('#delete-url').val(deleteUrl);
				$('#delete-modal-message').text('Bạn có chắc chắn muốn xóa bình luận của "' + name + '" không? Hành động này không thể hoàn tác.');
			});
		});
	</script>
}