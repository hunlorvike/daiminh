@using web.Areas.Admin.ViewModels.Comment
@model IEnumerable<CommentListItemViewModel>
@{
    ViewData["Title"] = "Quản lý Bình luận - Hệ thống quản trị";
}

<!-- Filter Form -->
<div class="card mb-3">
    <div class="card-body">
        <form method="get" asp-action="Index" id="filterForm" class="row g-3 align-items-end">
            <div class="col-md-4">
                <label class="form-label">Tìm kiếm</label>
                 <div class="input-group">
                    <input type="text" class="form-control" placeholder="Tên, email, nội dung..." name="searchTerm" value="@ViewBag.SearchTerm">
                     <button class="btn btn-icon" type="button" id="clearSearch" title="Xóa tìm kiếm"> <i class="ti ti-x"></i> </button>
                 </div>
            </div>
            <div class="col-md-3">
                <label class="form-label">Trạng thái duyệt</label>
                <select class="form-select tom-select-filter" name="isApproved" asp-items="@ViewBag.ApprovalStatusList"> @* Use ViewBag.ApprovalStatusList *@
                    <option value="">-- Tất cả --</option>
                </select>
            </div>
            <div class="col-md-3">
                <label class="form-label">Bài viết</label>
                 @* Use SelectList loaded into ViewBag *@
                <select class="form-select tom-select-filter" name="articleId" asp-items="@ViewBag.ArticleList">
                    <option value="">-- Tất cả bài viết --</option>
                </select>
            </div>
            <div class="col-md-1">
                <button type="submit" class="btn btn-primary w-100"> <i class="ti ti-filter me-1 d-none d-sm-inline-block"></i> Lọc</button>
            </div>
            <div class="col-md-1">
                <a asp-action="Index" class="btn btn-outline-secondary w-100"> <i class="ti ti-reload me-1 d-none d-sm-inline-block"></i> Đặt lại</a>
            </div>
        </form>
    </div>
</div>

<!-- Content Table -->
<div class="card">
     <div class="card-header d-flex justify-content-between align-items-center">
        <h3 class="card-title mb-0">Danh sách Bình luận</h3>
        @* No item count here if not paginated *@
    </div>
    <div class="card-body p-0">
        @if (!Model.Any()) { <div class="empty"><div class="empty-icon"><i class="ti ti-message-circle-off fa-3x text-muted"></i></div><p class="empty-title">Không có bình luận nào</p><p class="empty-subtitle text-muted">Chưa có bình luận nào được gửi.</p></div> }
        else {
            <div class="table-responsive">
                <table class="table table-vcenter card-table table-striped">
                    <thead> <tr><th>Tác giả</th><th>Bình luận</th><th>Phản hồi cho</th><th class="text-center">Trạng thái</th><th>Ngày gửi</th><th class="w-1">Thao tác</th></tr> </thead>
                    <tbody>
                        @foreach (var item in Model) {
                            <tr id="comment-row-@item.Id"> @* Add ID to row *@
                                <td> <div class="d-flex flex-column"><span class="fw-medium">@item.AuthorName</span><small class="text-muted">@item.AuthorEmail</small></div> </td>
                                <td class="text-muted">@item.ContentExcerpt</td>
                                <td> @if (item.ArticleTitle != null) { <a asp-controller="Article" asp-action="Edit" asp-route-id="@item.ArticleId" target="_blank" class="text-muted" title="@item.ArticleTitle"> <i class="ti ti-file-text me-1"></i> @(item.ArticleTitle.Length > 30 ? item.ArticleTitle.Substring(0, 30) + "..." : item.ArticleTitle) </a> } else { <span class="text-muted">N/A</span> } </td>
                                <td class="text-center status-cell"> @* Add class to target status *@
                                    @if (item.IsApproved) { <span class="badge bg-success-lt">Đã duyệt</span> }
                                    else { <span class="badge bg-warning-lt">Chờ duyệt</span> }
                                </td>
                                <td class="text-muted" title="@item.CreatedAt.ToString("dd/MM/yyyy HH:mm:ss")">@item.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                                <td>
                                    <div class="btn-list flex-nowrap action-buttons"> @* Add class to target buttons *@
                                        @if (item.IsApproved) { <button class="btn btn-sm btn-icon btn-outline-warning comment-action-btn" title="Bỏ duyệt" data-action="Unapprove" data-id="@item.Id" data-url="@Url.Action("Unapprove", "Comment")"><i class="ti ti-thumb-down"></i></button> }
                                        else { <button class="btn btn-sm btn-icon btn-outline-success comment-action-btn" title="Duyệt" data-action="Approve" data-id="@item.Id" data-url="@Url.Action("Approve", "Comment")"><i class="ti ti-thumb-up"></i></button> }
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-icon btn-outline-primary" title="Sửa"><i class="ti ti-pencil"></i></a>
                                        <button class="btn btn-sm btn-icon btn-outline-danger delete-item-btn" title="Xóa" data-id="@item.Id" data-name="Bình luận của @item.AuthorName" data-delete-url="@Url.Action("Delete", "Comment")"> <i class="ti ti-trash"></i> </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            @* Add Pagination controls here if using pagination in Controller *@
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
             $('#clearSearch').on('click', function() { $('input[name="searchTerm"]').val(''); $('input[name="articleId"]').val(''); $('.tom-select-filter').each(function(){ if(this.tomselect) this.tomselect.clear(); }); /*$('#filterForm').submit();*/ });
             document.querySelectorAll('.tom-select-filter').forEach((el)=>{ new TomSelect(el, { create: false, allowEmptyOption: true }); });

            // --- AJAX for Approve/Unapprove ---
            const csrfToken = $('input[name="__RequestVerificationToken"]').val(); // Get token

             $('.comment-action-btn').on('click', function(e) {
                e.preventDefault();
                const button = $(this);
                const url = button.data('url');
                const id = button.data('id');
                const action = button.data('action'); // 'Approve' or 'Unapprove'
                const isApproving = action === 'Approve';

                button.prop('disabled', true).html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>'); // Loading indicator

                $.ajax({
                    url: url,
                    type: 'POST',
                    data: {
                        id: id,
                        __RequestVerificationToken: csrfToken
                    },
                    success: function(response) {
                        if (response.success) {
                            toastr.success(response.message);
                            // Update UI dynamically
                             const row = $(`#comment-row-${id}`);
                             const statusCell = row.find('.status-cell');
                             const actionButtons = row.find('.action-buttons');

                            // Update status badge
                            if (response.isApproved) {
                                statusCell.html('<span class="badge bg-success-lt">Đã duyệt</span>');
                            } else {
                                statusCell.html('<span class="badge bg-warning-lt">Chờ duyệt</span>');
                            }

                            // Swap approve/unapprove button
                            actionButtons.find('.comment-action-btn').remove(); // Remove existing action button
                            if (response.isApproved) {
                                actionButtons.prepend('<button class="btn btn-sm btn-icon btn-outline-warning comment-action-btn" title="Bỏ duyệt" data-action="Unapprove" data-id="' + id + '" data-url="@Url.Action("Unapprove", "Comment")"><i class="ti ti-thumb-down"></i></button>');
                            } else {
                                actionButtons.prepend('<button class="btn btn-sm btn-icon btn-outline-success comment-action-btn" title="Duyệt" data-action="Approve" data-id="' + id + '" data-url="@Url.Action("Approve", "Comment")"><i class="ti ti-thumb-up"></i></button>');
                            }

                        } else {
                            toastr.error(response.message || 'Có lỗi xảy ra.');
                             button.prop('disabled', false).html(isApproving ? '<i class="ti ti-thumb-up"></i>' : '<i class="ti ti-thumb-down"></i>'); // Restore icon
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error("AJAX Error:", status, error, xhr.responseText);
                        toastr.error('Lỗi kết nối hoặc lỗi máy chủ.');
                        button.prop('disabled', false).html(isApproving ? '<i class="ti ti-thumb-up"></i>' : '<i class="ti ti-thumb-down"></i>'); // Restore icon
                    }
                    // No 'complete' needed as we handle button state in success/error
                });
            });

             // Global delete script handles .delete-item-btn
        });
    </script>
 }