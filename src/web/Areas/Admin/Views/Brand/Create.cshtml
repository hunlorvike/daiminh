@using web.Areas.Admin.ViewModels.Brand
@model BrandViewModel
@{
	ViewData["Title"] = "Thêm Thương hiệu mới - Hệ thống quản trị";
}

<form asp-action="Create" method="post">
	@Html.AntiForgeryToken()
	<div class="card">
		<div class="card-header">
			<h3 class="card-title">Thông tin Thương hiệu & SEO</h3>
		</div>
		<div class="card-body">
			<div asp-validation-summary="ModelOnly" class="text-danger alert alert-danger"></div>
			<partial name="_BrandFormFields" model="Model" />
		</div>
		<div class="card-footer text-end">
			<a asp-action="Index" class="btn btn-link">Hủy</a>
			<button type="submit" class="btn btn-primary">
				<i class="ti ti-device-floppy me-2"></i> Lưu Thương hiệu
			</button>
		</div>
	</div>
</form>


@section Scripts {
	<script src="~/js/slug.js" asp-append-version="true"></script>

	<script>
		$(document).ready(function () {
			$('.summernote').summernote({ lang: 'vi-VN',height: 400 });

			function setupImageSelection(selectBtnId, removeBtnId, previewId, inputId, storeFullPath = false, defaultImgSrc = '/img/placeholder.svg') {
				const selectBtn = $(`#${selectBtnId}`);
				const removeBtn = $(`#${removeBtnId}`);
				const preview = $(`#${previewId}`);
				const input = $(`#${inputId}`);

				function handleSelection(selectedFile) {
					if (selectedFile && selectedFile.url) {
						preview.attr('src', selectedFile.url).show();
						input.val(storeFullPath ? selectedFile.url : selectedFile.path).trigger('change');
						removeBtn.removeClass('d-none');
					} else {
						console.warn("Selected file object is missing 'url' or 'path'.", selectedFile);
						preview.attr('src', defaultImgSrc);
						if (!storeFullPath && previewId === 'logoPreview') { // Only show default placeholder for logo
							preview.show();
						} else {
							preview.hide(); // Hide preview for OG/Twitter if no image selected
						}
						input.val('').trigger('change');
						removeBtn.addClass('d-none');
					}
				}

				selectBtn.on('click', function () {
					if (typeof window.openMediaSelectionModal === 'function') {
						window.openMediaSelectionModal(handleSelection, 'Image');
					} else {
						console.error('window.openMediaSelectionModal function is not defined.');
						alert('Lỗi: Chức năng chọn media chưa sẵn sàng.');
					}
				});

				removeBtn.on('click', function () {
					preview.attr('src', defaultImgSrc);
					// Special handling for logo preview (always show placeholder) vs others (hide placeholder)
					if (!storeFullPath && previewId === 'logoPreview') {
						preview.show();
					} else {
						preview.hide();
					}
					input.val('').trigger('change');
					$(this).addClass('d-none');
				});

				if (input.val() === '' && (storeFullPath || previewId !== 'logoPreview')) {
					preview.hide();
				}
				else if (input.val() === '' && !storeFullPath && previewId === 'logoPreview') {
					preview.attr('src', defaultImgSrc).show();
				}
				else if (input.val() !== '') {
					preview.show();
				}
			}

			// --- Thiết lập cho Logo (LogoUrl - Lưu Path) ---
			setupImageSelection(
				'selectLogoBtn',       // ID nút Chọn ảnh
				'removeLogoBtn',       // ID nút Xóa ảnh
				'logoPreview',         // ID thẻ img xem trước
				'logoPathInput',       // ID input ẩn lưu giá trị
				false                  // Lưu Path (false)
			);

			// --- Thiết lập cho Ảnh Open Graph (OgImage - Lưu URL) ---
			setupImageSelection(
				'selectOgImageBtn',     // ID nút Chọn ảnh OG
				'removeOgImageBtn',     // ID nút Xóa ảnh OG
				'ogImagePreview',       // ID thẻ img xem trước OG
				'ogImagePathInput',     // ID input ẩn lưu giá trị OG
				true                    // Lưu URL (true)
			);

			// --- Thiết lập cho Ảnh Twitter (TwitterImage - Lưu URL) ---
			setupImageSelection(
				'selectTwitterImageBtn', // ID nút Chọn ảnh Twitter
				'removeTwitterImageBtn', // ID nút Xóa ảnh Twitter
				'twitterImagePreview',   // ID thẻ img xem trước Twitter
				'twitterImagePathInput', // ID input ẩn lưu giá trị Twitter
				true                     // Lưu URL (true)
			);


			// --- Slug Generation ---
			const nameInput = $('#brandName');
			const slugInput = $('#brandSlug');
			const generateBtn = $('#generateSlugButton');

			nameInput.on('input', function () {
				if (slugInput.val() === '') {
					try {
						slugInput.val(generateVietnameseSlug(nameInput.val()));
					} catch (e) { console.error("Error generating slug:", e); }
				}
			});
			generateBtn.on('click', function () {
				try {
					slugInput.val(generateVietnameseSlug(nameInput.val()));
				} catch (e) { console.error("Error generating slug:", e); }
			});
		});
	</script>
}