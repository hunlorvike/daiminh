@using web.Areas.Admin.ViewModels.Brand
@model BrandViewModel
@{
	ViewData["Title"] = "Chỉnh sửa Thương hiệu";
	// Breadcrumbs set in Controller
}

<form asp-action="Edit" method="post">
	@Html.AntiForgeryToken()
	<input type="hidden" asp-for="Id" /> @* Required for Edit *@

	<div class="card">
		<div class="card-header">
			<h3 class="card-title">Thông tin Thương hiệu & SEO</h3>
		</div>
		<div class="card-body">
			<div asp-validation-summary="ModelOnly" class="text-danger alert alert-danger"></div>
			<partial name="_BrandFormFields" model="Model" />
		</div>
		<div class="card-footer text-end">
			<a asp-action="Index" class="btn btn-link">Hủy</a>
			<button type="submit" class="btn btn-primary">
				<i class="ti ti-device-floppy me-2"></i> Cập nhật Thương hiệu
			</button>
		</div>
	</div>
</form>

@section Scripts {

	<script src="~/js/slug.js"></script>
	<script src="~/js/summernote.js"></script>

	<script>
		 $(document).ready(function() {
			// --- Logo Selection ---
			const selectLogoBtn = $('#selectLogoBtn');
			const removeLogoBtn = $('#removeLogoBtn');
			const logoPreview = $('#logoPreview');
			const logoPathInput = $('#logoPathInput');
			const defaultLogo = '/img/placeholder.svg';

			function handleLogoSelection(selectedFile) {
				if (selectedFile && selectedFile.url && selectedFile.path) {
					logoPreview.attr('src', selectedFile.url);
					logoPathInput.val(selectedFile.path).trigger('change');
					removeLogoBtn.removeClass('d-none');
				}
			}

			selectLogoBtn.on('click', function() {
				if (typeof window.openMediaSelectionModal === 'function') {
					window.openMediaSelectionModal(handleLogoSelection, 'Image');
				} else { console.error('openMediaSelectionModal is not defined.'); }
			});

			removeLogoBtn.on('click', function() {
				logoPreview.attr('src', defaultLogo);
				logoPathInput.val('').trigger('change');
				$(this).addClass('d-none');
			});

			 // --- OG/Twitter Image Selection ---
			 const selectOgImageBtn = $('#selectOgImageBtn');
			 const removeOgImageBtn = $('#removeOgImageBtn');
			 const ogImagePreview = $('#ogImagePreview');
			 const ogImagePathInput = $('#ogImagePathInput');
			 const defaultOgImage = '/img/placeholder.svg';

			function handleOgImageSelection(selectedFile) {
				 if (selectedFile && selectedFile.url) {
					ogImagePreview.attr('src', selectedFile.url).show();
					ogImagePathInput.val(selectedFile.url).trigger('change');
					removeOgImageBtn.removeClass('d-none');
				 }
			 }
			  selectOgImageBtn.on('click', function() {
				if (typeof window.openMediaSelectionModal === 'function') {
					window.openMediaSelectionModal(handleOgImageSelection, 'Image');
				} else { console.error('openMediaSelectionModal is not defined.'); }
			 });
			  removeOgImageBtn.on('click', function() {
				 ogImagePreview.attr('src', defaultOgImage).hide();
				 ogImagePathInput.val('').trigger('change');
				 $(this).addClass('d-none');
			 });

			// --- Slug Generation ---
			 const nameInput = $('#brandName');
			 const slugInput = $('#brandSlug');
			 const generateBtn = $('#generateSlugButton');
			 let userModifiedSlug = false;

			 slugInput.on('input', function() { userModifiedSlug = true; });

			 nameInput.on('input', function() {
				if (!userModifiedSlug) {
					slugInput.val(generateVietnameseSlug(nameInput.val()));
				}
			 });
			 generateBtn.on('click', function() {
				 userModifiedSlug = false;
				 slugInput.val(generateVietnameseSlug(nameInput.val()));
			 });
		});
	</script>
}