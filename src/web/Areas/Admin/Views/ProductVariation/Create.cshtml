@model ProductVariationViewModel
@{
    ViewData["Title"] = $"Thêm Biến thể - {Model.ProductName} - Hệ thống quản trị";
    ViewData["PageTitle"] = $"Thêm Biến thể mới";
    ViewData[TempDataConstants.Breadcrumbs] = new List<(string Text, string Url)> {
		("Sản phẩm", Url.Action("Index", "Product") ?? "/Admin/Product"),
		($"{Model.ProductName}", Url.Action("Edit", "Product", new { id = Model.ProductId }) ??
		$"/Admin/Product/Edit/{Model.ProductId}"),
		("Thêm biến thể", "")
	};
}

@section PageActions {
    <div class="btn-list">
        <button type="submit" form="variationForm" class="btn btn-primary d-none d-sm-inline-block">
            <i class="ti ti-device-floppy me-2"></i>Lưu Biến thể
        </button>
        <button type="submit" form="variationForm" class="btn btn-primary d-sm-none btn-icon">
            <i class="ti ti-device-floppy"></i>
        </button>
    </div>
}

<form asp-action="Create" method="post" id="variationForm">
    @Html.AntiForgeryToken()

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger alert-dismissible fade show mb-3" role="alert">
            <div class="d-flex">
                <div class="alert-icon">
                    <i class="ti ti-alert-circle"></i>
                </div>
                <div>
                    <h4 class="alert-title mb-0">Có lỗi xảy ra!</h4>
                    <div asp-validation-summary="ModelOnly" class="mb-0"></div>
                </div>
            </div>
            <a class="btn-close" data-bs-dismiss="alert" aria-label="close"></a>
        </div>
    }

    <partial name="_ProductVariationFormFields" model="Model" />

    <div class="mt-3 d-flex justify-content-end">
        <a asp-action="Index" asp-route-productId="@Model.ProductId" class="btn btn-link">
            <i class="ti ti-x me-1"></i>Hủy
        </a>
        <button type="submit" class="btn btn-primary ms-2">
            <i class="ti ti-device-floppy me-2"></i>Lưu Biến thể
        </button>
    </div>
</form>

@section Scripts {
	<script>
		$(document).ready(function () {
			function initMediaPickerButton() {
				$('.select-media-button').off('click').on('click', function () {
					const $button = $(this);
					const targetInputSelector = $button.data('target-input');
					const $targetInput = $(targetInputSelector);
					if (!$targetInput.length) {
						console.error("Media button target input not found:", targetInputSelector);
						return;
					}

					const $preview = $targetInput.closest('.form-group').find('.media-preview-area');

					const callback = function (selectedFile) {
						$targetInput.val(selectedFile.url).trigger('input');
					};

					if (typeof openMediaModal === 'function') {
						openMediaModal($targetInput, callback);
					} else {
						console.error("openMediaModal function is not defined.");
						alert("Media modal functionality is not available.");
					}
				});
			}

			function initImageInputWatcher() {
				$('.media-url-input').off('input change').on('input change', function () {
					const $input = $(this);
					const $preview = $input.closest('.form-group').find('.media-preview-area');
					if ($input.val() === '') {
						$preview.html('<i class="ti ti-photo-off text-muted fs-1"></i>');
					} else {
						$preview.html(`<img src="${$input.val()}" style="max-height: 80px; width: auto;" class="img-thumbnail img-fluid" />`);
					}
				});
			}

			initMediaPickerButton();
			initImageInputWatcher();
		});
</script>
}