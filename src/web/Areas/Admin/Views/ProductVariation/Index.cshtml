@using X.PagedList.Mvc.Core
@using X.PagedList
@using shared.Enums
@using web.Areas.Admin.ViewModels.ProductVariation
@using shared.Extensions

@model web.Areas.Admin.ViewModels.ProductVariation.ProductVariationIndexViewModel
@{
	ViewData["Title"] = $"Quản lý Biến thể Sản phẩm: {Model.ProductName} - Hệ thống quản trị";
	ViewData["PageTitle"] = $"Danh sách Biến thể cho Sản phẩm: {Model.ProductName}";
	ViewData["Breadcrumbs"] = new List<(string Text, string Url)> {
			("Sản phẩm", Url.Action("Index", "Product") ?? "/Admin/Product"),
             ($"Sản phẩm: {Model.ProductName}", Url.Action("Edit", "Product", new { id = Model.ProductId }) ?? $"/Admin/Product/Edit/{Model.ProductId}"),
            ("Biến thể", Url.Action(nameof(Index), new { productId = Model.ProductId }) ?? $"/Admin/ProductVariation/Index/{Model.ProductId}")
		};
}

@section PageActions {
	<div class="btn-list">
		<a asp-action="Create" asp-route-productId="@Model.ProductId" class="btn btn-primary d-sm-inline-block">
			<i class="ti ti-plus me-2"></i> Thêm Biến thể
		</a>
        <a asp-action="Edit" asp-controller="Product" asp-route-id="@Model.ProductId" class="btn btn-outline-primary d-sm-inline-block">
			<i class="ti ti-package me-2"></i> Quay lại Sản phẩm
		</a>
	</div>
}

<div class="card mb-3">
	<div class="card-body">
		<form method="get" asp-action="Index" id="filterForm" class="row g-3 align-items-end">
            @* Include ProductId in the form so filters work correctly *@
            <input type="hidden" name="productId" value="@Model.ProductId" />

			@* SearchTerm filter not implemented for variations based on attributes yet *@
			@* <div class="col-md-4">
				<label asp-for="Filter.SearchTerm" class="form-label"></label>
				<div class="input-group">
					<input asp-for="Filter.SearchTerm" class="form-control" placeholder="Tìm...">
					<button class="btn btn-icon" type="button" id="clearSearch" title="Xóa tìm kiếm"><i class="ti ti-x"></i></button>
				</div>
			</div> *@
			<div class="col-md-auto">
				<label asp-for="Filter.IsActive" class="form-label"></label>
				<select asp-for="Filter.IsActive" asp-items="@Model.Filter.IsActiveOptions" class="form-select"></select>
			</div>
            <div class="col-md-auto">
				<label asp-for="Filter.IsDefault" class="form-label"></label>
				<select asp-for="Filter.IsDefault" asp-items="@Model.Filter.IsDefaultOptions" class="form-select"></select>
			</div>
             <div class="col-md-auto">
				<label asp-for="Filter.InStock" class="form-label"></label>
				<select asp-for="Filter.InStock" asp-items="@Model.Filter.InStockOptions" class="form-select"></select>
			</div>


			<div class="col-md-auto">
				<label class="form-label"> </label>
				<button type="submit" class="btn btn-primary w-100"><i class="ti ti-filter me-1"></i> Lọc</button>
			</div>
			<div class="col-md-auto">
				<label class="form-label"> </label>
				<a asp-action="Index" asp-route-productId="@Model.ProductId" class="btn btn-outline-secondary w-100"><i class="ti ti-reload me-2"></i> Đặt lại</a>
			</div>
		</form>
	</div>
</div>

<div class="card">
	<div class="card-header d-flex justify-content-between align-items-center">
		<h3 class="card-title mb-0">Danh sách Biến thể</h3>
		@if (Model.Variations.TotalItemCount > 0)
		{
			<small class="text-muted">Hiển thị @Model.Variations.FirstItemOnPage-@Model.Variations.LastItemOnPage trên tổng số @Model.Variations.TotalItemCount biến thể</small>
		}
	</div>
	<div class="card-body p-0">
		@if (!Model.Variations.Any())
		{
			<div class="empty">
				<div class="empty-icon"><i class="ti ti-adjustments off fs-1 text-muted"></i></div> @* Assuming ti-adjustments icon exists *@
				<p class="empty-title">Không tìm thấy biến thể nào</p>
				<p class="empty-subtitle text-muted">
					@if (!Model.Filter.IsActive.HasValue && !Model.Filter.IsDefault.HasValue && !Model.Filter.InStock.HasValue)
					{
						@:Hãy thêm biến thể đầu tiên cho sản phẩm này.
					}
					else
					{
						@:Không có biến thể nào khớp với tiêu chí lọc của bạn. Hãy thử lại hoặc đặt lại bộ lọc.
					}
				</p>
				<div class="empty-action">
					<a asp-action="Create" asp-route-productId="@Model.ProductId" class="btn btn-primary"> <i class="ti ti-plus me-2"></i> Thêm biến thể </a>
				</div>
			</div>
		}
		else
		{
			<div class="table-responsive">
				<table class="table table-vcenter card-table table-striped">
					<thead>
						<tr>
							<th>Thuộc tính</th>
                            <th class="text-end">Giá bán</th>
                            <th class="text-end">Giá KM</th>
                            <th class="text-center">Tồn kho</th>
                            <th class="text-center">Ảnh</th>
                            <th class="text-center">Mặc định</th>
							<th class="text-center">Hoạt động</th>
							<th>Cập nhật</th>
							<th class="w-1">Thao tác</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var item in Model.Variations)
						{
							<tr>
								<td>
									<span class="fw-medium">@item.AttributeCombination</span>
                                    <small class="d-block text-muted">ID: @item.Id</small>
								</td>
								<td class="text-end">@item.Price.ToString("N0") đ</td>
                                <td class="text-end">
                                    @if (item.SalePrice.HasValue)
                                    {
                                        <span class="text-success fw-medium">@item.SalePrice.Value.ToString("N0") đ</span>
                                    }
                                    else
                                    {
                                         <span class="text-muted">—</span>
                                    }
                                </td>
                                 <td class="text-center">
                                    @item.StockQuantity
                                </td>
                                <td class="text-center">
                                    @if (!string.IsNullOrEmpty(item.ImageUrl))
                                    {
                                        <img src="@item.ImageUrl" alt="Ảnh biến thể" style="width: 40px; height: 40px; object-fit: cover;" class="img-thumbnail">
                                    }
                                    else
                                    {
                                         <span class="text-muted">—</span>
                                    }
                                </td>
                                <td class="text-center">
                                    @if (item.IsDefault)
                                    {
                                        <span class="badge bg-primary-lt"><i class="ti ti-star"></i></span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">—</span>
                                    }
                                </td>
								<td class="text-center">
                                     <span class="badge bg-@(item.IsActive ? "success" : "danger")-lt">
                                         @(item.IsActive ? "Có" : "Không")
                                     </span>
                                </td>
								<td>
									@if (item.UpdatedAt.HasValue)
									{
										<span>@item.UpdatedAt.Value.ToString("dd/MM/yyyy HH:mm")</span>
									}
									else
									{
										<span class="text-muted">N/A</span>
									}
								</td>
								<td class="text-muted">
									<div class="btn-list flex-nowrap">
										<a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-icon btn-outline-primary" title="Chỉnh sửa"><i class="ti ti-pencil"></i></a>
										<button class="btn btn-sm btn-icon btn-outline-danger delete-item-btn"
												title="Xóa"
												data-id="@item.Id"
                                                data-name="@item.AttributeCombination" @* Use combination for context *@
												data-delete-url="@Url.Action("Delete", "ProductVariation")"
                                                data-redirect-url="@Url.Action("Index", new { productId = Model.ProductId })" @* Specify redirect URL *@
                                                >
											<i class="ti ti-trash"></i>
										</button>
									</div>
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		}
	</div>
	@if (Model.Variations.PageCount > 1)
	{
		<div class="card-footer">
			<div class="d-flex justify-content-center">
				@Html.PagedListPager(
								Model.Variations,
								page => Url.Action("Index", new
								{
									page,
									productId = Model.ProductId, 
									Model.Filter.IsActive,
									Model.Filter.IsDefault,
                                    Model.Filter.InStock
								}),
								new PagedListRenderOptions
			{
				UlElementClasses = new[] { "pagination mb-0" },
				LiElementClasses = new[] { "page-item" },
				PageClasses = new[] { "page-link" },
				DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
				DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
				DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
				DisplayLinkToNextPage = PagedListDisplayMode.Always,
				ActiveLiElementClass = "active",
				LinkToPreviousPageFormat = "<span aria-hidden=\"true\">«</span>",
				LinkToNextPageFormat = "<span aria-hidden=\"true\">»</span>",
			})
			</div>
		</div>
	}
</div>

@section Scripts {
	<script>
		$(document).ready(function () {
			$('#clearSearch').on('click', function() {
				$('#Filter_SearchTerm').val(''); 
			});
		});
	</script>
}