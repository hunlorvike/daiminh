@using web.Areas.Admin.ViewModels.ProductVariation
@model ProductVariationViewModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions {
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken!;
    }
}

<input type="hidden" asp-for="ProductId" />
<input type="hidden" asp-for="ProductName" />

<div class="card">
    <div class="card-header">
        <h3 class="card-title">Thông tin Biến thể Sản phẩm</h3>
        <span class="card-subtitle ms-auto">Sản phẩm: <a href="@Url.Action("Edit", "Product", new { id = Model.ProductId })" class="fw-medium">@Model.ProductName</a></span>
    </div>
    <div class="card-body">
        <div class="row g-3">
            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label asp-for="Price" class="form-label required"></label>
                    <input asp-for="Price" type="number" step="0.01" min="0.01" class="form-control" />
                    <span asp-validation-for="Price" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label asp-for="SalePrice" class="form-label"></label>
                    <input asp-for="SalePrice" type="number" step="0.01" min="0.01" class="form-control" />
                    <span asp-validation-for="SalePrice" class="text-danger"></span>
                    <small class="form-hint">Để trống nếu không có khuyến mãi.</small>
                </div>
            </div>
        </div>

        <div class="row g-3">
            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label asp-for="StockQuantity" class="form-label required"></label>
                    <input asp-for="StockQuantity" type="number" min="0" class="form-control" />
                    <span asp-validation-for="StockQuantity" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label asp-for="ImageUrl" class="form-label"></label>
                    <div class="input-group">
                        <input asp-for="ImageUrl" class="form-control media-url-input" readonly />
                        <button class="btn btn-outline-secondary select-media-button" type="button"
                                data-bs-toggle="modal" data-bs-target="#selectMediaModal"
                                data-media-type-filter="0">
                            <i class="ti ti-photo"></i>
                        </button>
                    </div>
                    <span asp-validation-for="ImageUrl" class="text-danger"></span>
                    @if (!string.IsNullOrEmpty(Model.ImageUrl))
                    {
                        <div class="media-preview-area mt-2">
                            <img src="@Model.ImageUrl" style="max-width: 100px; height: auto;" class="img-thumbnail" />
                        </div>
                    }
                    else
                    {
                        <div class="media-preview-area mt-2"></div>
                    }
                </div>
            </div>
        </div>

        @* --- Attribute Value Selection --- *@
        <div class="form-group mb-3">
            <label asp-for="SelectedAttributeValueIds" class="form-label required"></label>
            <span asp-validation-for="SelectedAttributeValueIds" class="text-danger d-block"></span>
        </div>


        <div class="row g-3">
            <div class="col-md-6">
                <div class="form-check form-switch mb-0 mt-3">
                    <input class="form-check-input" type="checkbox" asp-for="IsActive" role="switch">
                    <label class="form-check-label" asp-for="IsActive"></label>
                    <span asp-validation-for="IsActive" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-check form-switch mb-0 mt-3">
                    <input class="form-check-input" type="checkbox" asp-for="IsDefault" role="switch">
                    <label class="form-check-label" asp-for="IsDefault"></label>
                    <span asp-validation-for="IsDefault" class="text-danger"></span>
                    <small class="form-hint d-block">Chỉ có một biến thể có thể là mặc định cho mỗi sản phẩm.</small>
                </div>
            </div>
        </div>


    </div>
    <div class="card-footer text-end bg-transparent border-top pt-3">
        <a asp-action="Index" asp-route-productId="@Model.ProductId" class="btn btn-link">Hủy</a>
        <button type="submit" class="btn btn-primary ms-2">
            <i class="ti ti-device-floppy me-2"></i> @(Model.Id > 0 ? "Cập nhật" : "Lưu") Biến thể
        </button>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
             // Initialize media picker buttons
             $('.select-media-button').on('click', function() {
                const $button = $(this);
                const $targetInput = $button.closest('.input-group').find('input[type="text"], input[type="url"]');
                const $preview = $targetInput.closest('.form-group').find('.media-preview-area'); // Find preview relative to the input

                const callback = function(selectedFile) {
                    $targetInput.val(selectedFile.url).trigger('change'); // Set value and trigger change
                     // Update preview area for this specific input
                    $preview.html(`<img src="${selectedFile.url}" style="max-width: 100px; height: auto;" class="img-thumbnail" />`);
                };

                // Assumes openMediaModal is a global function defined elsewhere
                if (typeof openMediaModal === 'function') {
                    openMediaModal($targetInput, callback);
                } else {
                    console.error("openMediaModal function is not defined.");
                    alert("Media modal functionality is not available.");
                }
            });

            // Watch Image URL input to update preview
             $('#ImageUrl').on('input change', function() {
                const $input = $(this);
                const $preview = $input.closest('.form-group').find('.media-preview-area');
                if ($input.val() === '') {
                    $preview.empty();
                } else {
                     $preview.html(`<img src="${$input.val()}" style="max-width: 100px; height: auto;" class="img-thumbnail" />`);
                }
            });

            // --- Specific JS for Attribute Value Selection ---
            // If using the combined tom-select, the validation handles the logic, no specific JS needed here
            // for enforcing "one value per attribute". The user just multi-selects.

            // If using separate selects per attribute (more user friendly), you'd need JS here to:
            // 1. Initialize a select for each attribute.
            // 2. Listen for changes on each select.
            // 3. Update the hidden/bound SelectedAttributeValueIds list based on all individual selects.
            // Example (conceptual, not full code):
            // $('select[name="SelectedAttributeValueIds_Attr_XXX"]').on('change', function() { ... update hidden list ... });

        });
    </script>
}