@model ProductIndexViewModel
@{
	ViewData["Title"] = "Quản lý Sản phẩm - Hệ thống quản trị";
	ViewData["PageTitle"] = "Danh sách Sản phẩm";
	ViewData[TempDataConstants.Breadcrumbs] = new List<(string Text, string Url)> {
		("Sản phẩm", Url.Action(nameof(Index)) ?? "/Admin/Product")
	};
}

@section PageActions {
	<div class="btn-list">
		<a asp-action="Create" class="btn btn-primary d-none d-sm-inline-block">
			<i class="ti ti-plus me-2"></i> Thêm Sản phẩm
		</a>
		<a asp-action="Create" class="btn btn-primary d-sm-none btn-icon">
			<i class="ti ti-plus"></i>
		</a>
	</div>
}

<div class="card mb-3">
	<div class="card-header">
		<h3 class="card-title">
			<i class="ti ti-filter me-2"></i>Bộ lọc sản phẩm
		</h3>
	</div>
	<div class="card-body">
		<form method="get" asp-action="Index" id="filterForm">
			<div class="row g-3 align-items-end">
				<div class="col-md-4 col-sm-12">
					<div class="form-group">
						<label asp-for="Filter.SearchTerm" class="form-label"></label>
						<div class="input-group">
							<span class="input-group-text">
								<i class="ti ti-search"></i>
							</span>
							<input asp-for="Filter.SearchTerm" class="form-control"
								   placeholder="Tìm tên, mô tả, nhà sản xuất...">
							<button class="btn btn-icon" type="button" id="clearSearch" title="Xóa tìm kiếm">
								<i class="ti ti-x"></i>
							</button>
						</div>
					</div>
				</div>
				<div class="col-md-2 col-sm-6">
					<div class="form-group">
						<label asp-for="Filter.CategoryId" class="form-label"></label>
						<div class="input-group">
							<span class="input-group-text">
								<i class="ti ti-category"></i>
							</span>
							<select asp-for="Filter.CategoryId" asp-items="@Model.Filter.CategoryOptions"
									class="form-select tom-selected">
							</select>
						</div>
					</div>
				</div>
				<div class="col-md-2 col-sm-6">
					<div class="form-group">
						<label asp-for="Filter.BrandId" class="form-label"></label>
						<div class="input-group">
							<span class="input-group-text">
								<i class="ti ti-building-store"></i>
							</span>
							<select asp-for="Filter.BrandId" asp-items="@Model.Filter.BrandOptions" class="form-select tom-selected">
							</select>
						</div>
					</div>
				</div>
				<div class="col-md-2 col-sm-6">
					<div class="form-group">
						<label asp-for="Filter.Status" class="form-label"></label>
						<div class="input-group">
							<span class="input-group-text">
								<i class="ti ti-eye"></i>
							</span>
							<select asp-for="Filter.Status" asp-items="@Model.Filter.StatusOptions"
									class="form-select tom-selected"></select>
						</div>
					</div>
				</div>
				<div class="col-md-2 col-sm-6">
					<div class="form-group">
						<label asp-for="Filter.IsFeatured" class="form-label"></label>
						<div class="input-group">
							<span class="input-group-text">
								<i class="ti ti-star"></i>
							</span>
							<select asp-for="Filter.IsFeatured" asp-items="@Model.Filter.IsFeaturedOptions"
									class="form-select tom-selected"></select>
						</div>
					</div>
				</div>
				<div class="col-md-auto col-6">
					<button type="submit" class="btn btn-primary w-100">
						<i class="ti ti-filter me-1 d-none d-sm-inline-block"></i> Lọc
					</button>
				</div>
				<div class="col-md-auto col-6">
					<a asp-action="Index" class="btn btn-outline-secondary w-100">
						<i class="ti ti-reload me-1 d-none d-sm-inline-block"></i> Đặt lại
					</a>
				</div>
			</div>
		</form>
	</div>
</div>

<div class="card">
	<div class="card-header d-flex justify-content-between align-items-center">
		<h3 class="card-title">
			<i class="ti ti-packages me-2"></i>Danh sách Sản phẩm
		</h3>
		@if (Model.Products.TotalItemCount > 0)
		{
			<small class="text-muted d-none d-md-block">
				Hiển thị
				@Model.Products.FirstItemOnPage-@Model.Products.LastItemOnPage trên tổng số @Model.Products.TotalItemCount
				sản phẩm
			</small>
		}
	</div>
	<div class="card-body p-0">
		@if (!Model.Products.Any())
		{
			<div class="empty py-5">
				<div class="empty-icon">
					<div class="avatar avatar-xl bg-light-subtle rounded">
						<i class="ti ti-package-off fs-1 text-muted"></i>
					</div>
				</div>
				<p class="empty-title mt-3">Không tìm thấy sản phẩm nào</p>
				<p class="empty-subtitle text-muted">
					@if (string.IsNullOrWhiteSpace(Model.Filter.SearchTerm) && !Model.Filter.Status.HasValue &&
										!Model.Filter.CategoryId.HasValue && !Model.Filter.BrandId.HasValue &&
										!Model.Filter.IsFeatured.HasValue)
					{
						@:Hãy thêm sản phẩm đầu tiên.
					}
					else
					{
						@:Không có sản phẩm nào khớp với tiêu chí lọc của bạn. Hãy thử lại hoặc đặt lại bộ lọc.
					}
				</p>
				<div class="empty-action">
					@if (string.IsNullOrWhiteSpace(Model.Filter.SearchTerm) && !Model.Filter.Status.HasValue &&
										!Model.Filter.CategoryId.HasValue && !Model.Filter.BrandId.HasValue &&
										!Model.Filter.IsFeatured.HasValue)
					{
						<a asp-action="Create" class="btn btn-primary">
							<i class="ti ti-plus me-2"></i> Thêm sản phẩm
						</a>
					}
					else
					{
						<a asp-action="Index" class="btn btn-outline-secondary">
							<i class="ti ti-reload me-2"></i> Đặt lại bộ lọc
						</a>
					}
				</div>
			</div>
		}
		else
		{
			<div class="table-responsive">
				<table class="table table-vcenter card-table table-striped table-hover">
					<thead>
						<tr>
							<th>Tên sản phẩm</th>
							<th class="d-none d-md-table-cell">Danh mục</th>
							<th class="d-none d-lg-table-cell">Thương hiệu</th>
							<th class="text-center">Trạng thái</th>
							<th class="text-center d-none d-sm-table-cell">Hoạt động</th>
							<th class="text-center d-none d-sm-table-cell">Nổi bật</th>
							<th class="text-center d-none d-lg-table-cell">
								<i class="ti ti-eye" data-bs-toggle="tooltip" title="Lượt xem"></i>
							</th>
							<th class="text-center">
								<i class="ti ti-photo" data-bs-toggle="tooltip" title="Ảnh"></i>
							</th>
							<th class="text-center d-none d-md-table-cell">
								<i class="ti ti-tags" data-bs-toggle="tooltip" title="Thẻ"></i>
							</th>
							<th class="text-center d-none d-md-table-cell">
								<i class="ti ti-adjustments" data-bs-toggle="tooltip" title="Biến thể"></i>
							</th>
							<th class="text-center d-none d-lg-table-cell">
								<i class="ti ti-message-star" data-bs-toggle="tooltip" title="Đánh giá"></i>
							</th>
							<th class="d-none d-lg-table-cell">Cập nhật</th>
							<th class="text-end">Thao tác</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var item in Model.Products)
						{
							<tr>
								<td>
									<div class="d-flex align-items-center">
										<span class="avatar avatar-xs bg-blue-lt me-2">
											<i class="ti ti-package"></i>
										</span>
										<div>
											<div class="fw-medium text-truncate" style="max-width: 200px;" title="@item.Name">
												@item.Name
											</div>
											<div class="text-muted small d-sm-none">
												@if (!string.IsNullOrEmpty(item.CategoryName))
												{
													<span class="badge bg-azure-lt me-1">@item.CategoryName</span>
												}
												@if (!string.IsNullOrEmpty(item.BrandName))
												{
													<span class="badge bg-purple-lt">@item.BrandName</span>
												}
											</div>
										</div>
									</div>
								</td>
								<td class="text-muted d-none d-md-table-cell">
									@if (!string.IsNullOrEmpty(item.CategoryName))
									{
										<div class="d-flex align-items-center">
											<i class="ti ti-category me-1"></i>
											<span>@item.CategoryName</span>
										</div>
									}
									else
									{
										<span class="text-muted">—</span>
									}
								</td>
								<td class="text-muted d-none d-lg-table-cell">
									@if (!string.IsNullOrEmpty(item.BrandName))
									{
										<div class="d-flex align-items-center">
											<i class="ti ti-building-store me-1"></i>
											<span>@item.BrandName</span>
										</div>
									}
									else
									{
										<span class="text-muted">—</span>
									}
								</td>
								<td class="text-center">
									@{
										var statusClass = item.Status switch
										{
											PublishStatus.Published => "status-green",
											PublishStatus.Draft => "status-gray",
											PublishStatus.Scheduled => "status-yellow",
											_ => "status-gray"
										};

										var statusDot = item.Status == PublishStatus.Published ? "status-dot-animated" : "";
									}
									<span class="status @statusClass">
										<span class="status-dot @statusDot"></span>
										<span class="d-none d-md-inline">@item.Status.GetDisplayName()</span>
									</span>
								</td>
								<td class="text-center d-none d-sm-table-cell">
									@if (item.IsActive)
									{
										<span class="status status-green">
											<span class="status-dot status-dot-animated"></span>
										</span>
									}
									else
									{
										<span class="status status-red">
											<span class="status-dot"></span>
										</span>
									}
								</td>
								<td class="text-center d-none d-sm-table-cell">
									@if (item.IsFeatured)
									{
										<i class="ti ti-star-filled text-yellow"></i>
									}
									else
									{
										<span class="text-muted">—</span>
									}
								</td>
								<td class="text-center d-none d-lg-table-cell">
									<span class="badge bg-blue-lt">@item.ViewCount</span>
								</td>
								<td class="text-center">
									<span class="badge bg-azure-lt">@item.ImageCount</span>
								</td>
								<td class="text-center d-none d-md-table-cell">
									<span class="badge bg-green-lt">@item.TagCount</span>
								</td>
								<td class="text-center d-none d-md-table-cell">
									<span class="badge bg-purple-lt">@item.VariationCount</span>
								</td>
								<td class="text-center d-none d-lg-table-cell">
									<span class="badge bg-yellow-lt">@item.ReviewCount</span>
								</td>
								<td class="text-muted d-none d-lg-table-cell"
									title="@Html.ToLocalTime(item.UpdatedAt, "Asia/Ho_Chi_Minh", "dd/MM/yyyy HH:mm:ss")">
									<div class="d-flex align-items-center">
										<i class="ti ti-calendar-time me-1"></i>
										@Html.ToLocalTime(item.UpdatedAt, "Asia/Ho_Chi_Minh")
									</div>
								</td>
								<td class="text-end">
									<div class="btn-group">
										<a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary"
										   title="Chỉnh sửa">
											<i class="ti ti-pencil"></i>
										</a>
										<button class="btn btn-sm btn-outline-danger delete-item-btn" title="Xóa"
												data-id="@item.Id" data-name="@item.Name"
												data-delete-url="@Url.Action("Delete", "Product")">
											<i class="ti ti-trash"></i>
										</button>
									</div>
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		}
	</div>
	@if (Model.Products.PageCount > 1)
	{
		<div class="card-footer">
			<div class="d-flex justify-content-center">
				@Html.PagedListPager(
								Model.Products,
								page => Url.Action("Index", new
								{
									page,
									Model.Filter.SearchTerm,
									Model.Filter.CategoryId,
									Model.Filter.BrandId,
									Model.Filter.Status,
									Model.Filter.IsFeatured
								}),
								new PagedListRenderOptions
			{
				UlElementClasses = new[] { "pagination mb-0" },
				LiElementClasses = new[] { "page-item" },
				PageClasses = new[] { "page-link" },
				DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
				DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
				DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
				DisplayLinkToNextPage = PagedListDisplayMode.Always,
				ActiveLiElementClass = "active",
				LinkToPreviousPageFormat = "<span aria-hidden=\"true\">«</span>",
				LinkToNextPageFormat = "<span aria-hidden=\"true\">»</span>",
			})
			</div>
		</div>
	}
</div>

@section Scripts {
	<script>
		$(document).ready(function () {
			$('#clearSearch').on('click', function () {
				$('#Filter_SearchTerm').val('');
				$('#filterForm').submit();
			});
		});
	</script>
}