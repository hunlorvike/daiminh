@model web.Areas.Admin.Requests.Product.ProductUpdateRequest
@using shared.Enums

<div class="modal modal-blur fade" id="edit-product--modal" tabindex="-1" role="dialog">
	<div class="modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable" role="document">
		<form asp-action="Edit" asp-controller="Product" asp-area="Admin" method="post" class="modal-content border">
			<div class="modal-header">
				<h5 class="modal-title">Chỉnh sửa sản phẩm</h5>
				<button type="button" class="btn-close command-modal-close"></button>
			</div>
			<div class="modal-body">
				<input type="hidden" asp-for="Id" />
				<div class="row">
					<div class="col-md-8">
						<div class="card">
							<div class="card-header">
								<h3 class="card-title">Thông tin sản phẩm</h3>
							</div>
							<div class="card-body">
								<div class="row mb-3">
									<div class="col-md-6">
										<label asp-for="Name" class="form-label"></label>
										<input asp-for="Name" class="form-control" autocomplete="off">
										<span asp-validation-for="Name" class="text-danger"></span>
									</div>
									<div class="col-md-6">
										<label asp-for="Slug" class="form-label"></label>
										<input asp-for="Slug" class="form-control" autocomplete="off">
										<span asp-validation-for="Slug" class="text-danger"></span>
									</div>
								</div>
								<div class="row mb-3">
									<div class="col-md-6">
										<label asp-for="ProductTypeId" class="form-label"></label>
										<select asp-for="ProductTypeId" class="form-select" asp-items="ViewBag.ProductTypes" id="productTypeSelect">
											<option value="">-- Chọn loại sản phẩm --</option>
										</select>
										<span asp-validation-for="ProductTypeId" class="text-danger"></span>
									</div>
									<div class="col-md-6">
										<label asp-for="Sku" class="form-label"></label>
										<input asp-for="Sku" class="form-control" autocomplete="off">
										<span asp-validation-for="Sku" class="text-danger"></span>
									</div>
								</div>
								<div class="row mb-3">
									<div class="col-md-6">
										<label asp-for="BasePrice" class="form-label"></label>
										<div class="input-group">
											<input asp-for="BasePrice" type="number" class="form-control" autocomplete="off">
											<span class="input-group-text">đ</span>
										</div>
										<span asp-validation-for="BasePrice" class="text-danger"></span>
									</div>
									<div class="col-md-6">
										<label asp-for="Status" class="form-label"></label>
										<select asp-for="Status" class="form-select" asp-items="Html.GetEnumSelectList<PublishStatus>()"></select>
										<span asp-validation-for="Status" class="text-danger"></span>
									</div>
								</div>
								<div class="mb-3">
									<label asp-for="Description" class="form-label"></label>
									<textarea asp-for="Description" class="form-control" rows="6"></textarea>
									<span asp-validation-for="Description" class="text-danger"></span>
								</div>
							</div>
						</div>

						<!-- Product Images Section -->
						<div class="card mt-3">
							<div class="card-header">
								<h3 class="card-title">Hình ảnh sản phẩm</h3>
							</div>
							<div class="card-body">
								<div class="row" id="productImagesContainer">
									@if (Model.Images != null && Model.Images.Any())
									{
										@for (var i = 0; i < Model.Images.Count; i++)
										{
											<div class="col-md-4 mb-3 product-image-card">
												<div class="card">
													<div class="card-body">
														<div class="mb-3">
															<label class="form-label">Hình ảnh</label>
															<input type="url" name="Images[@i].ImageUrl" value="@Model.Images[i].ImageUrl" class="form-control" placeholder="URL hình ảnh" required>
														</div>
														<div class="mb-3">
															<label class="form-label">Mô tả hình ảnh</label>
															<input type="text" name="Images[@i].AltText" value="@Model.Images[i].AltText" class="form-control" placeholder="Mô tả hình ảnh" required>
														</div>
														<div class="mb-3">
															<div class="form-check">
																<input class="form-check-input primary-image-checkbox" type="checkbox" name="Images[@i].IsPrimary" value="true" id="primaryImage@i" @(Model.Images[i].IsPrimary ? "checked" : "")>
																<label class="form-check-label" for="primaryImage@i">
																	Hình ảnh chính
																</label>
															</div>
														</div>
														<div class="mb-3">
															<button type="button" class="btn btn-outline-danger btn-sm remove-image-btn">
																<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-trash" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
																	<path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
																	<path d="M4 7l16 0"></path>
																	<path d="M10 11l0 6"></path>
																	<path d="M14 11l0 6"></path>
																	<path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12"></path>
																	<path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3"></path>
																</svg>
																Xóa
															</button>
														</div>
														<input type="hidden" name="Images[@i].DisplayOrder" value="@i">
													</div>
												</div>
											</div>
										}
									}
									else
									{
										<div class="col-md-4 mb-3 product-image-card">
											<div class="card">
												<div class="card-body">
													<div class="mb-3">
														<label class="form-label">Hình ảnh</label>
														<input type="url" name="Images[0].ImageUrl" class="form-control" placeholder="URL hình ảnh" required>
													</div>
													<div class="mb-3">
														<label class="form-label">Mô tả hình ảnh</label>
														<input type="text" name="Images[0].AltText" class="form-control" placeholder="Mô tả hình ảnh" required>
													</div>
													<div class="mb-3">
														<div class="form-check">
															<input class="form-check-input primary-image-checkbox" type="checkbox" name="Images[0].IsPrimary" value="true" id="primaryImage0" checked>
															<label class="form-check-label" for="primaryImage0">
																Hình ảnh chính
															</label>
														</div>
													</div>
													<input type="hidden" name="Images[0].DisplayOrder" value="0">
												</div>
											</div>
										</div>
									}
									<div class="col-md-4 mb-3">
										<button type="button" class="btn btn-outline-primary w-100 h-100" id="addImageBtn">
											<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-plus" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
												<path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
												<path d="M12 5l0 14"></path>
												<path d="M5 12l14 0"></path>
											</svg>
											Thêm hình ảnh
										</button>
									</div>
								</div>
							</div>
						</div>

						<!-- Custom Fields Section -->
						<div class="card mt-3" id="dynamicFieldsCard">
							<div class="card-header">
								<h3 class="card-title">Thông tin bổ sung</h3>
							</div>
							<div class="card-body" id="customFieldsContainer">
								<div class="alert alert-info">
									Vui lòng chọn loại sản phẩm để hiển thị các trường thông tin bổ sung.
								</div>
							</div>
						</div>
					</div>

					<div class="col-md-4">
						<!-- Categories and Tags -->
						<div class="card">
							<div class="card-header">
								<h3 class="card-title">Danh mục & Thẻ</h3>
							</div>
							<div class="card-body">
								<div class="mb-3">
									<label asp-for="CategoryIds" class="form-label"></label>
									<select asp-for="CategoryIds" class="form-select tom-select-tags" multiple asp-items="ViewBag.Categories" id="categoriesSelect">
									</select>
									<span asp-validation-for="CategoryIds" class="text-danger"></span>
								</div>
								<div class="mb-3">
									<label asp-for="TagIds" class="form-label"></label>
									<select asp-for="TagIds" class="form-select tom-select-tags" multiple asp-items="ViewBag.Tags" id="tagsSelect">
									</select>
									<span asp-validation-for="TagIds" class="text-danger"></span>
								</div>
							</div>
						</div>

						<!-- SEO Settings -->
						<div class="card mt-3">
							<div class="card-header">
								<h3 class="card-title">SEO Settings</h3>
							</div>
							<div class="card-body">
								<div class="mb-3">
									<label asp-for="MetaTitle" class="form-label"></label>
									<input type="text" asp-for="MetaTitle" class="form-control" />
									<span asp-validation-for="MetaTitle" class="text-danger"></span>
								</div>
								<div class="mb-3">
									<label asp-for="MetaDescription" class="form-label"></label>
									<textarea asp-for="MetaDescription" class="form-control" rows="3"></textarea>
									<span asp-validation-for="MetaDescription" class="text-danger"></span>
								</div>
								<div class="mb-3">
									<label asp-for="CanonicalUrl" class="form-label"></label>
									<input type="text" asp-for="CanonicalUrl" class="form-control" />
									<span asp-validation-for="CanonicalUrl" class="text-danger"></span>
								</div>
								<div class="mb-3">
									<label asp-for="OgTitle" class="form-label"></label>
									<input type="text" asp-for="OgTitle" class="form-control" />
									<span asp-validation-for="OgTitle" class="text-danger"></span>
								</div>
								<div class="mb-3">
									<label asp-for="OgDescription" class="form-label"></label>
									<textarea asp-for="OgDescription" class="form-control"></textarea>
									<span asp-validation-for="OgDescription" class="text-danger"></span>
								</div>
								<div class="mb-3">
									<label asp-for="OgImage" class="form-label"></label>
									<input type="text" asp-for="OgImage" class="form-control" />
									<span asp-validation-for="OgImage" class="text-danger"></span>
								</div>
								<div class="mb-3">
									<label asp-for="StructuredData" class="form-label"></label>
									<textarea asp-for="StructuredData" class="form-control"></textarea>
									<span asp-validation-for="StructuredData" class="text-danger"></span>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="modal-footer">
				<button class="btn btn-link link-secondary command-modal-close">Hủy</button>
				<button class="btn btn-primary command-submit ms-auto" type="button">
					<svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24"
						 stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round"
						 stroke-linejoin="round">
						<path stroke="none" d="M0 0h24v24H0z" fill="none" />
						<path d="M5 12l5 5l10 -10" />
					</svg>
					Lưu thông tin
				</button>
			</div>
		</form>
	</div>
</div>

<script>
	$(document).ready(function() {
		setupProductTypeChangeHandler();

		setupImageHandlers();

		if ($('#productTypeSelect').val()) {
			$('#productTypeSelect').trigger('change');
		}

		function setupProductTypeChangeHandler() {
			var fieldsByProductType = @Html.Raw(Json.Serialize(ViewBag.FieldsByProductType));
			var fieldValues = @Html.Raw(Json.Serialize(ViewBag.FieldValues));

			$('#productTypeSelect').on('change', function() {
				var productTypeId = parseInt($(this).val());
				if (!productTypeId || !fieldsByProductType || !fieldsByProductType[productTypeId]) {
					$('#customFieldsContainer').html(`
						<div class="alert alert-info">
							Vui lòng chọn loại sản phẩm để hiển thị các trường thông tin bổ sung.
						</div>
					`);
					return;
				}

				var fields = fieldsByProductType.filter(function(field) {
					return field.productTypeId === productTypeId;
				});
				if (fields && fields.length > 0) {
					var fieldsHtml = '';

					fields.forEach(function(field, index) {
						fieldsHtml += '<div class="mb-3">';
						fieldsHtml += '<label class="form-label">' + field.fieldName + (field.isRequired ? ' <span class="text-danger">*</span>' : '') + '</label>';

						var fieldValue = fieldValues && fieldValues[field.id] ? fieldValues[field.id] : '';

						switch (parseInt(field.fieldType)) {
							case @((int)FieldType.Text):
								fieldsHtml += '<input type="text" class="form-control" name="FieldValues[' + index + '].Value" value="' + fieldValue + '" ' + (field.isRequired ? 'required' : '') + '>';
								fieldsHtml += '<input type="hidden" name="FieldValues[' + index + '].FieldId" value="' + field.id + '">';
								break;

							case @((int)FieldType.Number):
								fieldsHtml += '<input type="number" class="form-control" name="FieldValues[' + index + '].Value" value="' + fieldValue + '" ' + (field.isRequired ? 'required' : '') + '>';
								fieldsHtml += '<input type="hidden" name="FieldValues[' + index + '].FieldId" value="' + field.id + '">';
								break;

							case @((int)FieldType.Date):
								fieldsHtml += '<input type="date" class="form-control" name="FieldValues[' + index + '].Value" value="' + fieldValue + '" ' + (field.isRequired ? 'required' : '') + '>';
								fieldsHtml += '<input type="hidden" name="FieldValues[' + index + '].FieldId" value="' + field.id + '">';
								break;

							case @((int)FieldType.Select):
								fieldsHtml += '<select class="form-select" name="FieldValues[' + index + '].Value" ' + (field.isRequired ? 'required' : '') + '>';
								fieldsHtml += '<option value="">-- Chọn ' + field.fieldName + ' --</option>';

								if (field.fieldOptions) {
									try {
										var options = JSON.parse(field.fieldOptions);
										options.forEach(function(option) {
											var selected = option.value === fieldValue ? 'selected' : '';
											fieldsHtml += '<option value="' + option.value + '" ' + selected + '>' + option.label + '</option>';
										});
									} catch (e) {
										console.error('Error parsing field options:', e);
									}
								}

								fieldsHtml += '</select>';
								fieldsHtml += '<input type="hidden" name="FieldValues[' + index + '].FieldId" value="' + field.id + '">';
								break;
						}
						fieldsHtml += '</div>';
					});

					$('#customFieldsContainer').html(fieldsHtml);
				} else {
					$('#customFieldsContainer').html(`
						<div class="alert alert-info">
							Không có trường thông tin bổ sung cho loại sản phẩm này.
						</div>
					`);
				}
			});
		}

		function setupImageHandlers() {
			// Handle image management
			let imageIndex = $('.product-image-card').length;

			$('#addImageBtn').on('click', function() {
				const newImageHtml = `
					<div class="col-md-4 mb-3 product-image-card">
						<div class="card">
							<div class="card-body">
								<div class="mb-3">
									<div class="d-flex justify-content-between mb-2">
										<label class="form-label mb-0">Hình ảnh</label>
										<button type="button" class="btn btn-outline-danger btn-sm remove-image-btn">
											<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-trash" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
												<path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
												<path d="M4 7l16 0"></path>
												<path d="M10 11l0 6"></path>
												<path d="M14 11l0 6"></path>
												<path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12"></path>
												<path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3"></path>
											</svg>
											Xóa
										</button>
									</div>
									<input type="url" name="Images[${imageIndex}].ImageUrl" class="form-control" placeholder="URL hình ảnh" required>
								</div>
								<div class="mb-3">
									<label class="form-label">Mô tả hình ảnh</label>
									<input type="text" name="Images[${imageIndex}].AltText" class="form-control" placeholder="Mô tả hình ảnh" required>
								</div>
								<div class="mb-3">
									<div class="form-check">
										<input class="form-check-input primary-image-checkbox" type="checkbox" name="Images[${imageIndex}].IsPrimary" value="true" id="primaryImage${imageIndex}">
										<label class="form-check-label" for="primaryImage${imageIndex}">
											Hình ảnh chính
										</label>
									</div>
								</div>
								<input type="hidden" name="Images[${imageIndex}].DisplayOrder" value="${imageIndex}">
							</div>
						</div>
					</div>
				`;

				$(this).closest('.col-md-4').before(newImageHtml);
				imageIndex++;

				// Ensure only one primary image is selected
				updatePrimaryImageCheckboxes();
			});

			// Handle removing images
			$(document).on('click', '.remove-image-btn', function() {
				$(this).closest('.product-image-card').remove();
				updateImageIndices();
				updatePrimaryImageCheckboxes();
			});

			// Handle primary image selection
			$(document).on('change', '.primary-image-checkbox', function() {
				if ($(this).is(':checked')) {
					$('.primary-image-checkbox').not(this).prop('checked', false);
				} else {
					// If no primary image is selected, select the first one
					updatePrimaryImageCheckboxes();
				}
			});

			// Update image indices after removal
			function updateImageIndices() {
				$('.product-image-card').each(function(idx) {
					const inputs = $(this).find('input');
					inputs.each(function() {
						const name = $(this).attr('name');
						if (name) {
							$(this).attr('name', name.replace(/Images\[\d+\]/, `Images[${idx}]`));
						}

						const id = $(this).attr('id');
						if (id && id.startsWith('primaryImage')) {
							$(this).attr('id', `primaryImage${idx}`);
							$(this).next('label').attr('for', `primaryImage${idx}`);
						}
					});

					// Update display order
					$(this).find('input[name$=".DisplayOrder"]').val(idx);
				});

				// Reset image index
				imageIndex = $('.product-image-card').length;
			}

			// Ensure at least one primary image is selected
			function updatePrimaryImageCheckboxes() {
				const checkedCount = $('.primary-image-checkbox:checked').length;
				if (checkedCount === 0 && $('.primary-image-checkbox').length > 0) {
					$('.primary-image-checkbox').first().prop('checked', true);
				}
			}

			// Initialize - ensure one primary image is selected
			updatePrimaryImageCheckboxes();
		}
	});
</script>

