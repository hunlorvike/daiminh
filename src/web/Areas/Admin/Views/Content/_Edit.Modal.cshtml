@model web.Areas.Admin.Requests.Content.ContentUpdateRequest
@{
	Layout = null;
}

<div class="modal modal-blur fade" id="edit-content--modal" tabindex="-1" role="dialog">
	<div class="modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable" role="document">
		<form asp-action="Edit" asp-controller="Content" asp-area="Admin" method="post" class="modal-content border">
			<div class="modal-header">
				<h5 class="modal-title">Sửa bài viết</h5>
				<button type="button" class="btn-close command-modal-close"></button>
			</div>
			<div class="modal-body">
				<div class="row">
					<div class="col-md-8">
						<div class="card">
							<div class="card-header">
								<h3 class="card-title">Thông tin bài viết</h3>
							</div>
							<div class="card-body">
								<div class="row mb-3">
									<input type="hidden" asp-for="Id" />
									<div class="col-md-6">
										<label asp-for="Title" class="form-label"></label>
										<input asp-for="Title" class="form-control">
										<span asp-validation-for="Title" class="text-danger"></span>
									</div>
									<div class="col-md-6">
										<label asp-for="Slug" class="form-label"></label>
										<input asp-for="Slug" class="form-control">
										<span asp-validation-for="Slug" class="text-danger"></span>
									</div>
								</div>
								<div class="row mb-3">
									<div class="col-md-6">
										<label asp-for="ContentTypeId" class="form-label"></label>
										<select asp-for="ContentTypeId" asp-items="ViewBag.ContentTypes" class="form-select">
											<option value="">-- Chọn loại bài viết --</option>
										</select>
										<span asp-validation-for="ContentTypeId" class="text-danger"></span>
									</div>
									<div class="col-md-6">
										<label asp-for="AuthorId" class="form-label"></label>
										<select asp-for="AuthorId" asp-items="ViewBag.Authors" class="form-select">
											<option value="">-- Chọn tác giả --</option>
										</select>
										<span asp-validation-for="AuthorId" class="text-danger"></span>
									</div>
								</div>
								<div class="mb-3">
									<label asp-for="CoverImageUrl" class="form-label"></label>
									<input asp-for="CoverImageUrl" class="form-control">
									<span asp-validation-for="CoverImageUrl" class="text-danger"></span>
								</div>
								<div class="mb-3">
									<label asp-for="Summary" class="form-label"></label>
									<textarea asp-for="Summary" class="form-control" rows="5"></textarea>
									<span asp-validation-for="Summary" class="text-danger"></span>
								</div>
								<div class="mb-3">
									<label asp-for="ContentBody" class="form-label"></label>
									<textarea asp-for="ContentBody" class="form-control" rows="10"></textarea>
									<span asp-validation-for="ContentBody" class="text-danger"></span>
								</div>
								<div class="mb-3">
									<label asp-for="Status" class="form-label"></label>
									<select asp-for="Status" class="form-select" asp-items="Html.GetEnumSelectList<shared.Enums.PublishStatus>()">
									</select>
									<span asp-validation-for="Status" class="text-danger"></span>
								</div>
							</div>
						</div>

						<div class="card mt-3" id="dynamicFieldsCard" style="display: none;">
							<div class="card-header">
								<h3 class="card-title">Custom Fields</h3>
							</div>
							<div class="card-body" id="dynamicFieldsContainer">
							</div>
						</div>
					</div>

					<div class="col-md-4">
						<!-- Categories and Tags -->
						<div class="card">
							<div class="card-header">
								<h3 class="card-title">Categories & Tags</h3>
							</div>
							<div class="card-body">
								<div class="mb-3">
									<label asp-for="CategoryIds" class="form-label"></label>
									<select asp-for="CategoryIds" asp-items="ViewBag.Categories" class="form-select" multiple id="categoriesSelect">
									</select>
									<span asp-validation-for="CategoryIds" class="text-danger"></span>
								</div>
								<div class="mb-3">
									<label asp-for="TagIds" class="form-label"></label>
									<select asp-for="TagIds" asp-items="ViewBag.Tags" class="form-select" multiple id="tagsSelect">
									</select>
									<span asp-validation-for="TagIds" class="text-danger"></span>
								</div>
							</div>
						</div>

						<div class="card mt-3">
							<div class="card-header">
								<h3 class="card-title">SEO Settings</h3>
							</div>
							<div class="card-body">
								<div class="mb-3">
									<label asp-for="MetaTitle" class="form-label"></label>
									<input asp-for="MetaTitle" class="form-control">
									<span asp-validation-for="MetaTitle" class="text-danger"></span>
								</div>
								<div class="mb-3">
									<label asp-for="MetaDescription" class="form-label"></label>
									<textarea asp-for="MetaDescription" class="form-control" rows="3"></textarea>
									<span asp-validation-for="MetaDescription" class="text-danger"></span>
								</div>
								<div class="col-12">
									<div class="mb-3">
										<label asp-for="CanonicalUrl" class="form-label"></label>
										<input type="text" asp-for="CanonicalUrl" class="form-control" />
										<span asp-validation-for="CanonicalUrl" class="text-danger"></span>
									</div>
								</div>
								<div class="mb-3">
									<label asp-for="OgTitle" class="form-label"></label>
									<input type="text" asp-for="OgTitle" class="form-control" />
									<span asp-validation-for="OgTitle" class="text-danger"></span>
								</div>
								<div class="mb-3">
									<label asp-for="OgDescription" class="form-label"></label>
									<textarea asp-for="OgDescription" class="form-control"></textarea>
									<span asp-validation-for="OgDescription" class="text-danger"></span>
								</div>
								<div class="mb-3">
									<label asp-for="OgImage" class="form-label"></label>
									<input type="text" asp-for="OgImage" class="form-control" />
									<span asp-validation-for="OgImage" class="text-danger"></span>
								</div>
								<div class="mb-3">
									<label asp-for="StructuredData" class="form-label"></label>
									<textarea asp-for="StructuredData" class="form-control"></textarea>
									<span asp-validation-for="StructuredData" class="text-danger"></span>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="modal-footer">
				<button class="btn btn-link link-secondary command-modal-close">Hủy</button>
				<button class="btn btn-primary command-submit ms-auto" type="button">
					<svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24"
						 stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round"
						 stroke-linejoin="round">
						<path stroke="none" d="M0 0h24v24H0z" fill="none" />
						<path d="M5 12l5 5l10 -10" />
					</svg>
					Lưu thông tin
				</button>
			</div>
		</form>
	</div>
</div>

<script>
	$(document).ready(function() {
		var categoriesSelect = new TomSelect('#categoriesSelect', {
			plugins: ['remove_button'],
			placeholder: 'Select categories',
			allowEmptyOption: true,
			create: false,
			maxItems: null,
			closeAfterSelect: true,
			items: Array.from(document.querySelectorAll('#categoriesSelect option:checked')).map(el => el.value)
		});

		var tagsSelect = new TomSelect('#tagsSelect', {
			plugins: ['remove_button'],
			placeholder: 'Select tags',
			allowEmptyOption: true,
			create: false,
			maxItems: null,
			closeAfterSelect: true,
			items: Array.from(document.querySelectorAll('#tagsSelect option:checked')).map(el => el.value)
		});

		setupContentTypeChangeHandler();

		if ($('#ContentTypeId').val()) {
			$('#ContentTypeId').trigger('change');
		}

		function setupContentTypeChangeHandler() {
			// Lấy dữ liệu từ ViewBag
			var fieldsByContentType = @Html.Raw(Json.Serialize(ViewBag.FieldsByContentType));
			var fieldValues = @Html.Raw(Json.Serialize(ViewBag.FieldValues));

			$('#ContentTypeId').on('change', function() {
				var contentTypeId = parseInt($(this).val());
				if (!contentTypeId || !fieldsByContentType || !fieldsByContentType[contentTypeId]) {
					$('#dynamicFieldsCard').hide();
					return;
				}

				var fields = fieldsByContentType.filter(function(field) {
					return field.contentTypeId === contentTypeId;
				});
				if (fields && fields.length > 0) {
					var fieldsHtml = '';

					fields.forEach(function(field) {
						fieldsHtml += '<div class="mb-3">';
						fieldsHtml += '<label class="form-label">' + field.fieldName + (field.isRequired ? ' *' : '') + '</label>';

						var fieldValue = fieldValues && fieldValues[field.id] ? fieldValues[field.id] : '';
						switch (parseInt(field.fieldType)) {
							case @((int)FieldType.Text):
								fieldsHtml += '<input type="text" class="form-control" name="FieldValues[' + field.id + ']" value="' + fieldValue + '" ' + (field.isRequired ? 'required' : '') + '>';
								break;

							case @((int)FieldType.Number):
								fieldsHtml += '<input type="number" class="form-control" name="FieldValues[' + field.id + ']" value="' + fieldValue + '" ' + (field.isRequired ? 'required' : '') + '>';
								break;

							case @((int)FieldType.Date):
								fieldsHtml += '<input type="date" class="form-control" name="FieldValues[' + field.id + ']" value="' + fieldValue + '" ' + (field.isRequired ? 'required' : '') + '>';
								break;

							case @((int)FieldType.Select):
								fieldsHtml += '<select class="form-select" name="FieldValues[' + field.id + ']" ' + (field.isRequired ? 'required' : '') + '>';
								fieldsHtml += '<option value="">-- Select Option --</option>';

								if (field.fieldOptions) {
									try {
										var options = JSON.parse(field.fieldOptions);
										options.forEach(function(option) {
											var selected = option.value === fieldValue ? 'selected' : '';
											fieldsHtml += '<option value="' + option.value + '" ' + selected + '>' + option.label + '</option>';
										});
									} catch (e) {
										console.error('Error parsing field options:', e);
									}
								}

								fieldsHtml += '</select>';
								break;
						}
						fieldsHtml += '</div>';
					});

					$('#dynamicFieldsContainer').html(fieldsHtml);
					initializeSpecialEditors();
					$('#dynamicFieldsCard').show();
				} else {
					$('#dynamicFieldsCard').hide();
				}
			});
		}

		function initializeSpecialEditors() {
			$('.form-select[multiple]').each(function() {
				if (!$(this).hasClass('tomselected')) {
					new TomSelect(this, {
						plugins: ['remove_button'],
						placeholder: 'Select options'
					});
				}
			});
		}
	});
</script>

