@using X.PagedList.Mvc.Core
@using shared.Helpers
@using web.Areas.Admin.ViewModels.Category
@using shared.Extensions
@using shared.Enums
@using X.PagedList
@model IPagedList<CategoryListItemViewModel>
@{
	ViewData["Title"] = ViewData["PageTitle"];
}

@section PageActions {
	<div class="btn-list">
		<a asp-action="Create" asp-route-type="@ViewBag.CurrentType" class="btn btn-primary d-sm-inline-block">
			<i class="ti ti-plus me-2"></i> Thêm @(((CategoryType)ViewBag.CurrentType).GetDisplayName().ToLowerInvariant())
		</a>
	</div>
}

<div class="card mb-3">
	<div class="card-body">
		<form method="get" asp-action="Index" id="filterForm" class="row g-3 align-items-end">
			<div class="col-md-4">
				<label class="form-label">Loại danh mục</label>
				<select class="form-select" name="type" asp-items="@ViewBag.CategoryTypes"></select>
			</div>
			<div class="col-md-4">
				<label class="form-label">Tìm kiếm</label>
				<div class="input-group">
					<input type="text" class="form-control" placeholder="Tìm theo tên..." name="searchTerm" value="@ViewBag.SearchTerm">
					<button class="btn btn-icon" type="button" id="clearSearch" title="Xóa tìm kiếm">
						<i class="ti ti-x"></i>
					</button>
				</div>
			</div>
			<div class="col-md-2">
				<button type="submit" class="btn btn-primary w-100">
					<i class="ti ti-search me-2"></i> Lọc
				</button>
			</div>
			<div class="col-md-2">
				<a asp-action="Index" asp-route-type="@ViewBag.CurrentType" class="btn btn-outline-secondary w-100">
					<i class="ti ti-reload me-2"></i> Đặt lại
				</a>
			</div>
		</form>
	</div>
</div>


<div class="card">
	<div class="card-header d-flex justify-content-between align-items-center">
		<h3 class="card-title mb-0">@ViewData["PageTitle"]</h3>
		@if (Model.TotalItemCount > 0)
		{
			<small class="text-muted">Hiển thị @Model.FirstItemOnPage-@Model.LastItemOnPage trên tổng số @Model.TotalItemCount danh mục</small>
		}
	</div>
	<div class="card-body p-0">
		@if (!Model.Any())
		{
			<div class="empty">
				<div class="empty-icon">
					<i class="ti ti-tag fa-5x text-muted"></i>
				</div>
				<p class="empty-title">Không tìm thấy danh mục nào</p>
				<p class="empty-subtitle text-muted">Hãy thêm danh mục đầu tiên cho loại này.</p>
				<div class="empty-action">
					<a asp-action="Create" asp-route-type="@ViewBag.CurrentType" class="btn btn-primary">
						<i class="ti ti-plus me-2"></i> Thêm danh mục @(((CategoryType)ViewBag.CurrentType).GetDisplayName().ToLowerInvariant())
					</a>
				</div>
			</div>
		}
		else
		{
			<div class="table-responsive">
				<table class="table table-vcenter card-table table-striped">
					<thead>
						<tr>
							<th class="w-1">ID</th>
							<th style="width: 10%;">Ảnh</th>
							<th style="width: 30%;">Tên danh mục</th>
							<th>Danh mục cha</th>
							<th class="text-center">Số mục</th>
							<th class="text-center">Thứ tự</th>
							<th class="text-center">Trạng thái</th>
							<th class="w-1">Thao tác</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var item in Model)
						{
							<tr>
								<td class="text-muted">@item.Id</td>
								<td>
									<img src="@MediaUrlHelper.GetMinioUrl(item.ImageUrl, "/img/placeholder.svg")"
										 alt="@item.Name"
										 class="avatar avatar-md object-fit-contain bg-light" /> @* Thêm bg-light *@
								</td>
								<td>
									<div class="d-flex align-items-center">
										@if (!string.IsNullOrEmpty(item.Icon))
										{
											<span class="me-2 text-muted" title="@item.Icon"><i class="@item.Icon"></i></span>
										}
										<span class="fw-medium">@item.Name</span>
									</div>
								</td>
								<td class="text-muted">@item.ParentName</td>
								<td class="text-center text-muted">@item.ItemCount</td>
								<td class="text-center">@item.OrderIndex</td>
								<td class="text-center">
									@if (item.IsActive)
									{
										<span class="badge bg-success-lt">Hiển thị</span>
									}
									else
									{
										<span class="badge bg-danger-lt">Ẩn</span>
									}
								</td>
								<td>
									<div class="btn-list flex-nowrap">
										<a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-icon btn-outline-primary" title="Chỉnh sửa">
											<i class="ti ti-pencil"></i>
										</a>
										<button class="btn btn-sm btn-icon btn-outline-danger delete-item-btn"
												title="Xóa"
												data-id="@item.Id"
												data-name="@item.Name"
												data-delete-url="@Url.Action("Delete", "Category")"
												title="Xóa @item.Type.GetDisplayName()">
											<i class="ti ti-trash"></i>
										</button>
									</div>
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		}
	</div>
	@if (Model.PageCount > 1)
	{
		<div class="card-footer ">
			<div class="d-flex align-items-center justify-content-center">
				@Html.PagedListPager(
								Model,
								page => Url.Action("Index", new { page, type = ViewBag.CurrentType, searchTerm = ViewBag.SearchTerm }),
								new PagedListRenderOptions
			{
				UlElementClasses = new[] { "pagination mb-0" },
				LiElementClasses = new[] { "page-item" },
				PageClasses = new[] { "page-link" },
				DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
				DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
				DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
				DisplayLinkToNextPage = PagedListDisplayMode.Always,
			})
			</div>
		</div>
	}
</div>


@section Scripts {
	<script>
		$(document).ready(function () {
			 $('#clearSearch').on('click', function() {
				$('input[name="searchTerm"]').val('');
			 });
		});
	</script>
}