@using X.PagedList.Mvc.Core
@using X.PagedList
@using web.Areas.Admin.ViewModels.Testimonial
@model TestimonialIndexViewModel
@{
    ViewData["Title"] = "Quản lý Đánh giá Khách hàng";
    ViewData["PageTitle"] = "Danh sách Đánh giá";
    ViewData["Breadcrumbs"] = new List<(string Text, string Url)> {
        ("Đánh giá", "")
    };
}

@section PageActions {
    <div class="btn-list">
        <a asp-action="Create" class="btn btn-primary d-none d-sm-inline-block">
            <i class="ti ti-plus me-2"></i> Thêm Đánh giá
        </a>
        <a asp-action="Create" class="btn btn-primary d-sm-none btn-icon">
            <i class="ti ti-plus"></i>
        </a>
    </div>
}

@* Filter Form *@
<div class="card mb-3">
    <div class="card-header">
        <h3 class="card-title">
            <i class="ti ti-filter me-2"></i>Bộ lọc
        </h3>
    </div>
    <div class="card-body">
        <form method="get" asp-action="Index" id="filterForm">
            <div class="row g-3 align-items-end">
                <div class="col-md-4 col-sm-12">
                    <div class="form-group">
                        <label asp-for="Filter.SearchTerm" class="form-label"></label>
                        <div class="input-group">
                            <span class="input-group-text">
                                <i class="ti ti-search"></i>
                            </span>
                            <input asp-for="Filter.SearchTerm" class="form-control" placeholder="Tìm tên, công ty, nội dung...">
                            <button class="btn btn-icon" type="button" id="clearSearch" title="Xóa tìm kiếm">
                                <i class="ti ti-x"></i>
                            </button>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 col-sm-6">
                    <div class="form-group">
                        <label asp-for="Filter.IsActive" class="form-label"></label>
                        <div class="input-group">
                            <span class="input-group-text">
                                <i class="ti ti-eye"></i>
                            </span>
                            <select asp-for="Filter.IsActive" asp-items="@Model.Filter.StatusOptions" class="form-select"></select>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 col-sm-6">
                    <div class="form-group">
                        <label asp-for="Filter.Rating" class="form-label"></label>
                        <div class="input-group">
                            <span class="input-group-text">
                                <i class="ti ti-star"></i>
                            </span>
                            <select asp-for="Filter.Rating" asp-items="@Model.Filter.RatingOptions" class="form-select"></select>
                        </div>
                    </div>
                </div>
                <div class="col-md-1 col-6">
                    <button type="submit" class="btn btn-primary w-100">
                        <i class="ti ti-filter me-1 d-none d-sm-inline-block"></i> Lọc
                    </button>
                </div>
                <div class="col-md-1 col-6">
                    <a asp-action="Index" class="btn btn-outline-secondary w-100">
                        <i class="ti ti-reload me-1 d-none d-sm-inline-block"></i> Đặt lại
                    </a>
                </div>
            </div>
        </form>
    </div>
</div>

@* Display Results *@
<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h3 class="card-title">
            <i class="ti ti-message-star me-2"></i>Danh sách Đánh giá
        </h3>
        @if (Model.Testimonials.TotalItemCount > 0)
        {
            <small class="text-muted d-none d-md-block">Hiển thị @Model.Testimonials.FirstItemOnPage-@Model.Testimonials.LastItemOnPage trên tổng số @Model.Testimonials.TotalItemCount đánh giá</small>
        }
    </div>
    <div class="card-body p-0">
        @if (!Model.Testimonials.Any())
        {
            <div class="empty py-5">
                <div class="empty-icon">
                    <div class="avatar avatar-xl bg-light-subtle rounded">
                        <i class="ti ti-message-star-off fs-1 text-muted"></i>
                    </div>
                </div>
                <p class="empty-title mt-3">Không tìm thấy đánh giá nào</p>
                <p class="empty-subtitle text-muted">
                    Chưa có đánh giá nào được thêm hoặc không có kết quả nào khớp với bộ lọc của bạn.
                </p>
                <div class="empty-action">
                    @if (string.IsNullOrWhiteSpace(Model.Filter.SearchTerm) && !Model.Filter.IsActive.HasValue && !Model.Filter.Rating.HasValue)
                    {
                        <a asp-action="Create" class="btn btn-primary">
                            <i class="ti ti-plus me-2"></i> Thêm đánh giá đầu tiên
                        </a>
                    }
                    else
                    {
                        <a asp-action="Index" class="btn btn-outline-secondary">
                            <i class="ti ti-reload me-2"></i> Đặt lại bộ lọc
                        </a>
                    }
                </div>
            </div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-vcenter card-table table-striped table-hover">
                    <thead>
                        <tr>
                            <th style="width:5%">Avatar</th>
                            <th>Khách hàng</th>
                            <th class="d-none d-md-table-cell">Công ty</th>
                            <th class="text-center">Xếp hạng</th>
                            <th class="text-center d-none d-lg-table-cell">Thứ tự</th>
                            <th class="text-center">Trạng thái</th>
                            <th class="d-none d-md-table-cell">Cập nhật</th>
                            <th class="w-1">Thao tác</th> 
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Testimonials)
                        {
                            <tr>
                                <td>
                                    @if (!string.IsNullOrEmpty(item.ClientAvatar))
                                    {
                                        <span class="avatar avatar-md rounded"
                                              style="background-image: url('@item.ClientAvatar')"></span>
                                    }
                                    else
                                    {
                                        <span class="avatar avatar-md bg-blue-lt">
                                            @(item.ClientName.Length > 0 ? item.ClientName[0].ToString().ToUpper() : "?")
                                        </span>
                                    }
                                </td>
                                <td>
                                    <div class="d-flex flex-column">
                                        <div class="fw-medium">@item.ClientName</div>
                                        @if (!string.IsNullOrEmpty(item.ClientTitle))
                                        {
                                            <div class="text-muted small">@item.ClientTitle</div>
                                        }
                                    </div>
                                </td>
                                <td class="text-muted d-none d-md-table-cell">
                                    @if (!string.IsNullOrEmpty(item.ClientCompany))
                                    {
                                        <div class="d-flex align-items-center">
                                            <i class="ti ti-building me-1"></i>
                                            @item.ClientCompany
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="text-muted fst-italic">—</span>
                                    }
                                </td>
                                <td class="text-center">
                                    <div class="stars">
                                        @for (int star = 1; star <= 5; star++)
                                        {
                                            <i class="ti ti-star@(star <= item.Rating ? "-filled" : "") @(star <= item.Rating ? "text-yellow" : "text-muted")"></i>
                                        }
                                    </div>
                                </td>
                                <td class="text-center d-none d-lg-table-cell">
                                    <span class="badge bg-azure-lt">@item.OrderIndex</span>
                                </td>
                                <td class="text-center">
                                    @if (item.IsActive)
                                    {
                                        <span class="status status-green">
                                            <span class="status-dot status-dot-animated"></span>
                                            <span class="d-none d-md-inline">Hiển thị</span>
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="status status-red">
                                            <span class="status-dot"></span>
                                            <span class="d-none d-md-inline">Ẩn</span>
                                        </span>
                                    }
                                </td>
                                <td class="text-muted d-none d-md-table-cell" title="@item.UpdatedAt?.ToString("dd/MM/yyyy HH:mm:ss")">
                                    <div class="d-flex align-items-center">
                                        <i class="ti ti-calendar-time me-1"></i>
                                        @(item.UpdatedAt?.ToString("dd/MM/yyyy HH:mm") ?? "—")
                                    </div>
                                </td>
                                <td>
                                    <div class="btn-group">
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary" title="Chỉnh sửa">
                                            <i class="ti ti-pencil"></i>
                                        </a>
                                        <button class="btn btn-sm btn-outline-danger delete-item-btn"
                                                title="Xóa"
                                                data-id="@item.Id"
                                                data-name="@item.ClientName"
                                                data-delete-url="@Url.Action("Delete", "Testimonial")">
                                            <i class="ti ti-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
    @* Pagination *@
    @if (Model.Testimonials.PageCount > 1)
    {
        <div class="card-footer">
            <div class="d-flex align-items-center justify-content-center">
                @Html.PagedListPager(
                    Model.Testimonials,
                    page => Url.Action("Index", new
                    {
                        page,
                        searchTerm = Model.Filter.SearchTerm,
                        isActive = Model.Filter.IsActive,
                        rating = Model.Filter.Rating,
                        pageSize = Model.Testimonials.PageSize
                    }),
                    new PagedListRenderOptions
                    {
                        UlElementClasses = new[] { "pagination mb-0" },
                        LiElementClasses = new[] { "page-item" },
                        PageClasses = new[] { "page-link" },
                        DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                        DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
                        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                        DisplayLinkToNextPage = PagedListDisplayMode.Always,
                        ActiveLiElementClass = "active",
                        LinkToPreviousPageFormat = "<span aria-hidden=\"true\">«</span>",
                        LinkToNextPageFormat = "<span aria-hidden=\"true\">»</span>",
                    })
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#clearSearch').on('click', function() {
                $('#Filter_SearchTerm').val('');
                $('#filterForm').submit();
            });
        });
    </script>
}