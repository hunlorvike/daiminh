@using X.PagedList.Mvc.Core
@using X.PagedList
@using web.Areas.Admin.ViewModels.Testimonial
@model TestimonialIndexViewModel
@{
	ViewData["Title"] = "Quản lý Đánh giá Khách hàng";
	ViewData["PageTitle"] = "Danh sách Đánh giá";
	ViewData["Breadcrumbs"] = new List<(string Text, string Url)> {
		("Đánh giá", "")
	};
}

@section PageActions {
	<div class="btn-list">
		<a asp-action="Create" class="btn btn-primary d-sm-inline-block">
			<i class="ti ti-plus me-2"></i> Thêm Đánh giá
		</a>
	</div>
}

@* Filter Form *@
<div class="card mb-3">
	<div class="card-body">
		<form method="get" asp-action="Index" id="filterForm" class="row g-3 align-items-end">
			<div class="col-md-4">
				<label asp-for="Filter.SearchTerm" class="form-label"></label>
				<div class="input-group">
					<input asp-for="Filter.SearchTerm" class="form-control" placeholder="Tìm tên, công ty, nội dung...">
					<button class="btn btn-icon" type="button" id="clearSearch" title="Xóa tìm kiếm">
						<i class="ti ti-x"></i>
					</button>
				</div>
			</div>
			<div class="col-md-3">
				<label asp-for="Filter.IsActive" class="form-label"></label>
				<select asp-for="Filter.IsActive" asp-items="@Model.Filter.StatusOptions" class="form-select"></select>
			</div>
			<div class="col-md-2">
				<label asp-for="Filter.Rating" class="form-label"></label>
				<select asp-for="Filter.Rating" asp-items="@Model.Filter.RatingOptions" class="form-select"></select>
			</div>
			<div class="col-md-1">
				<button type="submit" class="btn btn-primary w-100">
					<i class="ti ti-filter me-1"></i> Lọc
				</button>
			</div>
			<div class="col-md-2">
				<a asp-action="Index" class="btn btn-outline-secondary w-100">
					<i class="ti ti-reload me-2"></i> Đặt lại
				</a>
			</div>
		</form>
	</div>
</div>

@* Display Results *@
<div class="card">
	<div class="card-header d-flex justify-content-between align-items-center">
		<h3 class="card-title mb-0">Danh sách Đánh giá</h3>
		@if (Model.Testimonials.TotalItemCount > 0)
		{
			<small class="text-muted">Hiển thị @Model.Testimonials.FirstItemOnPage-@Model.Testimonials.LastItemOnPage trên tổng số @Model.Testimonials.TotalItemCount đánh giá</small>
		}
	</div>
	<div class="card-body p-0">
		@if (!Model.Testimonials.Any())
		{
			<div class="empty">
				<div class="empty-icon"><i class="ti ti-message-2-star fa-5x text-muted"></i></div>
				<p class="empty-title">Không tìm thấy đánh giá nào</p>
				<p class="empty-subtitle text-muted">
					Chưa có đánh giá nào được thêm hoặc không có kết quả nào khớp với bộ lọc của bạn.
				</p>
				<div class="empty-action">
					@if (string.IsNullOrWhiteSpace(Model.Filter.SearchTerm) && !Model.Filter.IsActive.HasValue && !Model.Filter.Rating.HasValue)
					{
						<a asp-action="Create" class="btn btn-primary"> <i class="ti ti-plus me-2"></i> Thêm đánh giá đầu tiên </a>
					}
					else
					{
						<a asp-action="Index" class="btn btn-outline-secondary"> <i class="ti ti-reload me-2"></i> Đặt lại bộ lọc </a>
					}
				</div>
			</div>
		}
		else
		{
			<div class="table-responsive">
				<table class="table table-vcenter card-table table-striped">
					<thead>
						<tr>
							<th style="width:5%">Avatar</th>
							<th>Khách hàng</th>
							<th>Công ty</th>
							<th class="text-center" style="width: 10%">Xếp hạng</th>
							<th class="text-center" style="width: 5%">Thứ tự</th>
							<th class="text-center" style="width: 10%">Trạng thái</th>
							<th style="width: 15%">Cập nhật</th>
							<th class="w-1"></th> @* Actions *@
						</tr>
					</thead>
					<tbody>
						@foreach (var item in Model.Testimonials)
						{
							<tr>
								<td>
									@if (!string.IsNullOrEmpty(item.ClientAvatar))
									{
										<span class="avatar avatar-md rounded"
                                              style="background-image: url('@item.ClientAvatar')"></span>
									}
									else
									{
										<span class="avatar avatar-sm bg-blue-lt">@item.ClientName.FirstOrDefault()</span>
									}
								</td>
								<td class="text-muted">@item.ClientName</td>
								<td class="text-muted">@item.ClientCompany</td>
								<td class="text-muted text-center">
									@for (int star = 1; star <= 5; star++)
									{
										<i class="ti ti-star-filled @(star <= item.Rating ? "text-warning" : "text-muted")"></i>
									}
								</td>
								<td class="text-muted text-center">@item.OrderIndex</td>
								<td class="text-muted text-center">
									@if (item.IsActive)
									{
										<span class="badge bg-success-lt">Hiển thị</span>
									}
									else
									{
										<span class="badge bg-danger-lt">Ẩn</span>
									}
								</td>
								<td class="text-muted" title="@item.UpdatedAt?.ToString("dd/MM/yyyy HH:mm:ss")">
									@item.UpdatedAt?.ToString("dd/MM/yyyy HH:mm")
								</td>
								<td>
									<div class="btn-list flex-nowrap">
										<a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-icon btn-outline-primary" title="Chỉnh sửa">
											<i class="ti ti-pencil"></i>
										</a>
										<button class="btn btn-sm btn-icon btn-outline-danger delete-item-btn"
												title="Xóa"
												data-id="@item.Id"
												data-name="@item.ClientName"
												data-delete-url="@Url.Action("Delete", "Testimonial")">
											<i class="ti ti-trash"></i>
										</button>
									</div>
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		}
	</div>
	@* Pagination *@
	@if (Model.Testimonials.PageCount > 1)
	{
		<div class="card-footer">
			<div class="d-flex align-items-center justify-content-center">
				@Html.PagedListPager(
								Model.Testimonials,
								page => Url.Action("Index", new
								{
									page,
									searchTerm = Model.Filter.SearchTerm,
									isActive = Model.Filter.IsActive,
									rating = Model.Filter.Rating,
									pageSize = Model.Testimonials.PageSize
								}),
								new PagedListRenderOptions
			{
				UlElementClasses = new[] { "pagination mb-0" },
				LiElementClasses = new[] { "page-item" },
				PageClasses = new[] { "page-link" },
				DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
				DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
				DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
				DisplayLinkToNextPage = PagedListDisplayMode.Always,
				ActiveLiElementClass = "active",
				LinkToPreviousPageFormat = "<span aria-hidden=\"true\">«</span>",
				LinkToNextPageFormat = "<span aria-hidden=\"true\">»</span>",
			})
			</div>
		</div>
	}
</div>

@section Scripts {
	<script>
		$(document).ready(function () {
			$('#clearSearch').on('click', function() {
				$('#Filter_SearchTerm').val('');
			});
		});
	</script>
}