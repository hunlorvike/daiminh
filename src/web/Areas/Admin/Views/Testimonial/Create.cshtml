@model TestimonialViewModel
@{
	ViewData["Title"] = "Thêm Đánh giá Khách hàng";
	ViewData["PageTitle"] = "Thêm Đánh giá Mới";
	ViewData[TempDataConstants.Breadcrumbs] = new List<(string Text, string Url)> {
		("Đánh giá", Url.Action(nameof(Index)) ?? "/Admin/Testimonial"),
		("Thêm mới", "")
	};
}

@section Styles {
	<style>
		.rating-stars {
			display: flex;
			gap: 5px;
		}

		.rating-star {
			color: #ccc;
			font-size: 24px;
			cursor: pointer;
		}

		.rating-star.active {
			color: #f59f00;
		}
	</style>
}

<form asp-action="Create" method="post">
	@Html.AntiForgeryToken()
	@if (!ViewData.ModelState.IsValid)
	{
		<div class="alert alert-danger alert-dismissible fade show" role="alert">
			<div class="d-flex">
				<div class="alert-icon">
					<i class="ti ti-alert-circle"></i>
				</div>
				<div>
					<h4 class="alert-title mb-0">Có lỗi xảy ra!</h4>
					<div asp-validation-summary="ModelOnly" class="mb-0"></div>
				</div>
			</div>
			<a class="btn-close" data-bs-dismiss="alert" aria-label="close"></a>
		</div>
	}
	<partial name="_TestimonialFormFields" model="Model" />

	<div class="mt-3 d-flex justify-content-end">
		<a asp-action="Index" class="btn btn-link">
			<i class="ti ti-x me-1"></i>Hủy bỏ
		</a>
		<button type="submit" class="btn btn-primary ms-2">
			<i class="ti ti-device-floppy me-2"></i>Lưu Đánh giá
		</button>
	</div>
</form>

@section Scripts {
	<script>
		$(document).ready(function () {
			function setupImageSelection() {
				const selectBtn = $('#selectImageBtn');
				const removeBtn = $('#removeImageBtn');
				const preview = $('#avatar-preview');
				const input = $('#imagePathInput');

				function updatePreview(url) {
					if (url) {
						preview.html(`<img src="${url}" class="avatar-img rounded" />`);
						removeBtn.removeClass('d-none');
					} else {
						preview.html(`<span class="avatar-img bg-blue-lt"><i class="ti ti-user fs-1"></i></span>`);
						removeBtn.addClass('d-none');
					}
				}

				selectBtn.on('click', function () {
					// Assuming openMediaModal is a function that opens your media selection modal
					openMediaModal(input, function (selectedFile) {
						if (selectedFile && selectedFile.url) {
							console.log(selectedFile);
							input.val(selectedFile.url).trigger('change');
							updatePreview(selectedFile.url);
						}
					});
				});

				removeBtn.on('click', function () {
					input.val('').trigger('change');
					updatePreview('');
				});
			}

			// Star rating handling
			function setupStarRating() {
				const stars = $('.rating-star');
				const ratingInput = $('#Rating');

				stars.on('click', function (e) {
					e.preventDefault();
					const rating = $(this).data('rating');

					// Update input value
					ratingInput.val(rating);

					// Update stars visual
					stars.removeClass('active');
					stars.each(function () {
						if ($(this).data('rating') <= rating) {
							$(this).addClass('active');
						}
					});
				});
			}

			setupImageSelection();
			setupStarRating();
		});
	</script>
}