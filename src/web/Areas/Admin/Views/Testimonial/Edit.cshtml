@using web.Areas.Admin.ViewModels.Testimonial
@model TestimonialViewModel
@{
    ViewData["Title"] = "Chỉnh sửa đánh giá khách hàng - Hệ thống quản trị";
}

<div class="card">
    <div class="card-body">
        <form asp-action="Edit" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
			@Html.AntiForgeryToken()

			<partial name="_TestimonialFormFields" model="Model" />

            <div class="d-flex justify-content-between mt-4">
                <a asp-action="Index" class="btn btn-outline-secondary">
                    <i class="ti ti-arrow-left me-2"></i> Quay lại
                </a>
                <button type="submit" class="btn btn-primary">
                    <i class="ti ti-device-floppy me-2"></i> Cập nhật đánh giá
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
		// Rating stars functionality
		function updateStars(rating) {
			const $ratingStarsContainer = $('#ratingStars');
			if (!$ratingStarsContainer.length) return;

			$ratingStarsContainer.empty();
			for (let i = 1; i <= 5; i++) {
				const starClass = i <= rating ? 'ti ti-star-filled text-warning' : 'ti ti-star text-warning';
				$ratingStarsContainer.append(`<i class="${starClass} me-1"></i>`);
			}
		}

		$(document).ready(function() {
			// Rating slider functionality
			const ratingSlider = document.getElementById('ratingSlider');
			if (ratingSlider) {
				let initialRating = parseInt(ratingSlider.value);
				if (isNaN(initialRating) || initialRating < 1 || initialRating > 5) {
					initialRating = 5;
					ratingSlider.value = initialRating;
				}
				updateStars(initialRating);

				ratingSlider.addEventListener('input', function() {
					updateStars(parseInt(this.value));
				});
			}

			// Avatar selection functionality
			function handleAvatarSelection(selectedFile) {
				if (selectedFile && selectedFile.url && selectedFile.path) {
					$previewImg.attr('src', selectedFile.url);
					$pathInput.val(selectedFile.path).trigger('change');
					$removeBtn.removeClass('d-none');
				}
			}

			const $selectBtn = $('#selectAvatarBtn');
			const $removeBtn = $('#removeAvatarBtn');
			const $previewImg = $('#avatarPreview');
			const $pathInput = $('#avatarPathInput');
			const defaultAvatar = '/img/placecholder.svg';

			$selectBtn.on('click', function() {
				if (typeof window.openMediaSelectionModal === 'function') {
					window.openMediaSelectionModal(handleAvatarSelection, 'Image');
				} else {
					console.error('Function openMediaSelectionModal is not defined.');
					alert('Không thể mở thư viện media.');
				}
			});

			$removeBtn.on('click', function() {
				$previewImg.attr('src', defaultAvatar);
				$pathInput.val('').trigger('change');
				$(this).addClass('d-none');
			});
		});
    </script>
}