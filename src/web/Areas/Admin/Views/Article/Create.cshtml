@using shared.Helpers
@using web.Areas.Admin.ViewModels.Article
@model ArticleViewModel
@{
    ViewData["Title"] = "Viết Bài mới";
}

<form asp-action="Create" method="post" id="article-form">
    @Html.AntiForgeryToken()

    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Nội dung Bài viết</h3>
        </div>
        <div class="card-body">
            <div asp-validation-summary="ModelOnly" class="text-danger alert alert-danger"></div>
            <partial name="_ArticleFormFields" model="Model" />
        </div>
        <div class="card-footer text-end">
            <a asp-action="Index" class="btn btn-link">Hủy</a>
            <button type="submit" class="btn btn-primary">
                <i class="ti ti-device-floppy me-2"></i> Lưu bài viết
            </button>
        </div>
    </div>
</form>

@section Scripts {
    <script src="~/js/slug.js"></script>

    <script>
        $(document).ready(function() {
            // Initialize Tom Select
            $('.tom-select-multiple').each(function(){
                new TomSelect(this, {
                    plugins: ['remove_button'],
                    create: $(this).is('#SelectedTagIds'), // Allow create only for tags
                    placeholder: $(this).attr('id') === 'SelectedCategoryIds' ? 'Chọn danh mục...' : ($(this).attr('id') === 'SelectedTagIds' ? 'Chọn hoặc nhập thẻ...' : 'Chọn sản phẩm...')
                });
            });

             // Initialize Summernote
            $('.summernote-editor').summernote({ /* Full options */ height: 400 });

            // --- Slug Generation ---
            const titleInput = $('#articleTitle');
            const slugInput = $('#articleSlug');
            const generateBtn = $('#generateSlugButton');
            titleInput.on('input', function() {
               if (slugInput.val() === '') { slugInput.val(generateVietnameseSlug(titleInput.val())); }
            });
            generateBtn.on('click', function() { slugInput.val(generateVietnameseSlug(titleInput.val())); });

            // --- General Media Selection Logic ---
             function handleMediaSelection(selectedFile, inputSelector, previewSelector) {
                if (selectedFile && inputSelector && previewSelector) {
                     const inputField = $(inputSelector);
                     const previewImg = $(previewSelector);
                     const removeBtn = $(`button[data-target-input="${inputSelector}"]`).filter('.remove-media-btn');

                     // Assuming OgImage/TwitterImage store URL, others store path
                     const valueToStore = (inputSelector === '#ogImagePathInput' || inputSelector === '#twitterImagePathInput')
                                        ? selectedFile.url // Store full URL
                                        : selectedFile.path; // Store path for Featured/Thumb/Avatar

                     const displayUrl = '@(MediaUrlHelper.GetMinioUrl("__IMAGE_PATH__", "/img/placeholder.svg"))'.replace('__IMAGE_PATH__', selectedFile.path);

                     previewImg.attr('src', displayUrl).show();
                     inputField.val(valueToStore || '').trigger('change');
                     if(removeBtn.length) removeBtn.removeClass('d-none');
                }
            }

             // Attach click handlers using event delegation from a common parent or document
             $(document).on('click', '.select-media-btn', function() {
                 const targetInput = $(this).data('target-input');
                 const targetPreview = $(this).data('target-preview');
                 if (typeof window.openMediaSelectionModal === 'function') {
                     // Create a specific callback for this instance
                     const specificCallback = (selectedFile) => handleMediaSelection(selectedFile, targetInput, targetPreview);
                     window.openMediaSelectionModal(specificCallback, 'Image'); // Filter images
                 } else { console.error('openMediaSelectionModal is not defined.'); }
             });

              $(document).on('click', '.remove-media-btn', function() {
                 const targetInput = $(this).data('target-input');
                 const targetPreview = $(this).data('target-preview');
                 const placeholder = $(this).data('placeholder') || '/img/placeholder-image.png';
                 if (targetInput && targetPreview) {
                     $(targetPreview).attr('src', placeholder);
                      if ($(targetPreview).is('#ogImagePreview')) $(targetPreview).hide(); // Hide OG preview specifically
                     $(targetInput).val('').trigger('change');
                     $(this).addClass('d-none');
                 }
             });

             // Initialize Datepicker (Example using native HTML5)
             // Ensure correct format if not using native
        });
    </script>
}